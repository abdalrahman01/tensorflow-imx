// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/lite/tools/evaluation/proto/evaluation_stages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/lite/tools/evaluation/proto/preprocessing_steps.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[21]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
namespace tflite {
namespace evaluation {
class AccuracyMetrics;
class AccuracyMetricsDefaultTypeInternal;
extern AccuracyMetricsDefaultTypeInternal _AccuracyMetrics_default_instance_;
class ImageClassificationMetrics;
class ImageClassificationMetricsDefaultTypeInternal;
extern ImageClassificationMetricsDefaultTypeInternal _ImageClassificationMetrics_default_instance_;
class ImageClassificationParams;
class ImageClassificationParamsDefaultTypeInternal;
extern ImageClassificationParamsDefaultTypeInternal _ImageClassificationParams_default_instance_;
class ImagePreprocessingParams;
class ImagePreprocessingParamsDefaultTypeInternal;
extern ImagePreprocessingParamsDefaultTypeInternal _ImagePreprocessingParams_default_instance_;
class InferenceProfilerMetrics;
class InferenceProfilerMetricsDefaultTypeInternal;
extern InferenceProfilerMetricsDefaultTypeInternal _InferenceProfilerMetrics_default_instance_;
class LatencyMetrics;
class LatencyMetricsDefaultTypeInternal;
extern LatencyMetricsDefaultTypeInternal _LatencyMetrics_default_instance_;
class ObjectDetectionAveragePrecisionMetrics;
class ObjectDetectionAveragePrecisionMetricsDefaultTypeInternal;
extern ObjectDetectionAveragePrecisionMetricsDefaultTypeInternal _ObjectDetectionAveragePrecisionMetrics_default_instance_;
class ObjectDetectionAveragePrecisionMetrics_AveragePrecision;
class ObjectDetectionAveragePrecisionMetrics_AveragePrecisionDefaultTypeInternal;
extern ObjectDetectionAveragePrecisionMetrics_AveragePrecisionDefaultTypeInternal _ObjectDetectionAveragePrecisionMetrics_AveragePrecision_default_instance_;
class ObjectDetectionAveragePrecisionParams;
class ObjectDetectionAveragePrecisionParamsDefaultTypeInternal;
extern ObjectDetectionAveragePrecisionParamsDefaultTypeInternal _ObjectDetectionAveragePrecisionParams_default_instance_;
class ObjectDetectionGroundTruth;
class ObjectDetectionGroundTruthDefaultTypeInternal;
extern ObjectDetectionGroundTruthDefaultTypeInternal _ObjectDetectionGroundTruth_default_instance_;
class ObjectDetectionMetrics;
class ObjectDetectionMetricsDefaultTypeInternal;
extern ObjectDetectionMetricsDefaultTypeInternal _ObjectDetectionMetrics_default_instance_;
class ObjectDetectionParams;
class ObjectDetectionParamsDefaultTypeInternal;
extern ObjectDetectionParamsDefaultTypeInternal _ObjectDetectionParams_default_instance_;
class ObjectDetectionResult;
class ObjectDetectionResultDefaultTypeInternal;
extern ObjectDetectionResultDefaultTypeInternal _ObjectDetectionResult_default_instance_;
class ObjectDetectionResult_ObjectInstance;
class ObjectDetectionResult_ObjectInstanceDefaultTypeInternal;
extern ObjectDetectionResult_ObjectInstanceDefaultTypeInternal _ObjectDetectionResult_ObjectInstance_default_instance_;
class ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox;
class ObjectDetectionResult_ObjectInstance_NormalizedBoundingBoxDefaultTypeInternal;
extern ObjectDetectionResult_ObjectInstance_NormalizedBoundingBoxDefaultTypeInternal _ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox_default_instance_;
class ProcessMetrics;
class ProcessMetricsDefaultTypeInternal;
extern ProcessMetricsDefaultTypeInternal _ProcessMetrics_default_instance_;
class ProcessSpecification;
class ProcessSpecificationDefaultTypeInternal;
extern ProcessSpecificationDefaultTypeInternal _ProcessSpecification_default_instance_;
class TfliteInferenceMetrics;
class TfliteInferenceMetricsDefaultTypeInternal;
extern TfliteInferenceMetricsDefaultTypeInternal _TfliteInferenceMetrics_default_instance_;
class TfliteInferenceParams;
class TfliteInferenceParamsDefaultTypeInternal;
extern TfliteInferenceParamsDefaultTypeInternal _TfliteInferenceParams_default_instance_;
class TopkAccuracyEvalMetrics;
class TopkAccuracyEvalMetricsDefaultTypeInternal;
extern TopkAccuracyEvalMetricsDefaultTypeInternal _TopkAccuracyEvalMetrics_default_instance_;
class TopkAccuracyEvalParams;
class TopkAccuracyEvalParamsDefaultTypeInternal;
extern TopkAccuracyEvalParamsDefaultTypeInternal _TopkAccuracyEvalParams_default_instance_;
}  // namespace evaluation
}  // namespace tflite
PROTOBUF_NAMESPACE_OPEN
template<> ::tflite::evaluation::AccuracyMetrics* Arena::CreateMaybeMessage<::tflite::evaluation::AccuracyMetrics>(Arena*);
template<> ::tflite::evaluation::ImageClassificationMetrics* Arena::CreateMaybeMessage<::tflite::evaluation::ImageClassificationMetrics>(Arena*);
template<> ::tflite::evaluation::ImageClassificationParams* Arena::CreateMaybeMessage<::tflite::evaluation::ImageClassificationParams>(Arena*);
template<> ::tflite::evaluation::ImagePreprocessingParams* Arena::CreateMaybeMessage<::tflite::evaluation::ImagePreprocessingParams>(Arena*);
template<> ::tflite::evaluation::InferenceProfilerMetrics* Arena::CreateMaybeMessage<::tflite::evaluation::InferenceProfilerMetrics>(Arena*);
template<> ::tflite::evaluation::LatencyMetrics* Arena::CreateMaybeMessage<::tflite::evaluation::LatencyMetrics>(Arena*);
template<> ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* Arena::CreateMaybeMessage<::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics>(Arena*);
template<> ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision* Arena::CreateMaybeMessage<::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision>(Arena*);
template<> ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* Arena::CreateMaybeMessage<::tflite::evaluation::ObjectDetectionAveragePrecisionParams>(Arena*);
template<> ::tflite::evaluation::ObjectDetectionGroundTruth* Arena::CreateMaybeMessage<::tflite::evaluation::ObjectDetectionGroundTruth>(Arena*);
template<> ::tflite::evaluation::ObjectDetectionMetrics* Arena::CreateMaybeMessage<::tflite::evaluation::ObjectDetectionMetrics>(Arena*);
template<> ::tflite::evaluation::ObjectDetectionParams* Arena::CreateMaybeMessage<::tflite::evaluation::ObjectDetectionParams>(Arena*);
template<> ::tflite::evaluation::ObjectDetectionResult* Arena::CreateMaybeMessage<::tflite::evaluation::ObjectDetectionResult>(Arena*);
template<> ::tflite::evaluation::ObjectDetectionResult_ObjectInstance* Arena::CreateMaybeMessage<::tflite::evaluation::ObjectDetectionResult_ObjectInstance>(Arena*);
template<> ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* Arena::CreateMaybeMessage<::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox>(Arena*);
template<> ::tflite::evaluation::ProcessMetrics* Arena::CreateMaybeMessage<::tflite::evaluation::ProcessMetrics>(Arena*);
template<> ::tflite::evaluation::ProcessSpecification* Arena::CreateMaybeMessage<::tflite::evaluation::ProcessSpecification>(Arena*);
template<> ::tflite::evaluation::TfliteInferenceMetrics* Arena::CreateMaybeMessage<::tflite::evaluation::TfliteInferenceMetrics>(Arena*);
template<> ::tflite::evaluation::TfliteInferenceParams* Arena::CreateMaybeMessage<::tflite::evaluation::TfliteInferenceParams>(Arena*);
template<> ::tflite::evaluation::TopkAccuracyEvalMetrics* Arena::CreateMaybeMessage<::tflite::evaluation::TopkAccuracyEvalMetrics>(Arena*);
template<> ::tflite::evaluation::TopkAccuracyEvalParams* Arena::CreateMaybeMessage<::tflite::evaluation::TopkAccuracyEvalParams>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tflite {
namespace evaluation {

enum TfliteInferenceParams_Delegate : int {
  TfliteInferenceParams_Delegate_NONE = 0,
  TfliteInferenceParams_Delegate_NNAPI = 1,
  TfliteInferenceParams_Delegate_GPU = 2,
  TfliteInferenceParams_Delegate_HEXAGON = 3,
  TfliteInferenceParams_Delegate_XNNPACK = 4
};
bool TfliteInferenceParams_Delegate_IsValid(int value);
constexpr TfliteInferenceParams_Delegate TfliteInferenceParams_Delegate_Delegate_MIN = TfliteInferenceParams_Delegate_NONE;
constexpr TfliteInferenceParams_Delegate TfliteInferenceParams_Delegate_Delegate_MAX = TfliteInferenceParams_Delegate_XNNPACK;
constexpr int TfliteInferenceParams_Delegate_Delegate_ARRAYSIZE = TfliteInferenceParams_Delegate_Delegate_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TfliteInferenceParams_Delegate_descriptor();
template<typename T>
inline const std::string& TfliteInferenceParams_Delegate_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TfliteInferenceParams_Delegate>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TfliteInferenceParams_Delegate_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TfliteInferenceParams_Delegate_descriptor(), enum_t_value);
}
inline bool TfliteInferenceParams_Delegate_Parse(
    const std::string& name, TfliteInferenceParams_Delegate* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TfliteInferenceParams_Delegate>(
    TfliteInferenceParams_Delegate_descriptor(), name, value);
}
// ===================================================================

class ProcessSpecification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ProcessSpecification) */ {
 public:
  ProcessSpecification();
  virtual ~ProcessSpecification();

  ProcessSpecification(const ProcessSpecification& from);
  ProcessSpecification(ProcessSpecification&& from) noexcept
    : ProcessSpecification() {
    *this = ::std::move(from);
  }

  inline ProcessSpecification& operator=(const ProcessSpecification& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessSpecification& operator=(ProcessSpecification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcessSpecification& default_instance();

  enum ParamsCase {
    kImagePreprocessingParams = 1,
    kTopkAccuracyEvalParams = 2,
    kTfliteInferenceParams = 3,
    kImageClassificationParams = 4,
    kObjectDetectionAveragePrecisionParams = 5,
    kObjectDetectionParams = 6,
    PARAMS_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessSpecification* internal_default_instance() {
    return reinterpret_cast<const ProcessSpecification*>(
               &_ProcessSpecification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProcessSpecification& a, ProcessSpecification& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessSpecification* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcessSpecification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessSpecification* New() const final {
    return CreateMaybeMessage<ProcessSpecification>(nullptr);
  }

  ProcessSpecification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessSpecification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcessSpecification& from);
  void MergeFrom(const ProcessSpecification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcessSpecification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ProcessSpecification";
  }
  protected:
  explicit ProcessSpecification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImagePreprocessingParamsFieldNumber = 1,
    kTopkAccuracyEvalParamsFieldNumber = 2,
    kTfliteInferenceParamsFieldNumber = 3,
    kImageClassificationParamsFieldNumber = 4,
    kObjectDetectionAveragePrecisionParamsFieldNumber = 5,
    kObjectDetectionParamsFieldNumber = 6,
  };
  // optional .tflite.evaluation.ImagePreprocessingParams image_preprocessing_params = 1;
  bool has_image_preprocessing_params() const;
  void clear_image_preprocessing_params();
  const ::tflite::evaluation::ImagePreprocessingParams& image_preprocessing_params() const;
  ::tflite::evaluation::ImagePreprocessingParams* release_image_preprocessing_params();
  ::tflite::evaluation::ImagePreprocessingParams* mutable_image_preprocessing_params();
  void set_allocated_image_preprocessing_params(::tflite::evaluation::ImagePreprocessingParams* image_preprocessing_params);
  void unsafe_arena_set_allocated_image_preprocessing_params(
      ::tflite::evaluation::ImagePreprocessingParams* image_preprocessing_params);
  ::tflite::evaluation::ImagePreprocessingParams* unsafe_arena_release_image_preprocessing_params();

  // optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
  bool has_topk_accuracy_eval_params() const;
  void clear_topk_accuracy_eval_params();
  const ::tflite::evaluation::TopkAccuracyEvalParams& topk_accuracy_eval_params() const;
  ::tflite::evaluation::TopkAccuracyEvalParams* release_topk_accuracy_eval_params();
  ::tflite::evaluation::TopkAccuracyEvalParams* mutable_topk_accuracy_eval_params();
  void set_allocated_topk_accuracy_eval_params(::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params);
  void unsafe_arena_set_allocated_topk_accuracy_eval_params(
      ::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params);
  ::tflite::evaluation::TopkAccuracyEvalParams* unsafe_arena_release_topk_accuracy_eval_params();

  // optional .tflite.evaluation.TfliteInferenceParams tflite_inference_params = 3;
  bool has_tflite_inference_params() const;
  void clear_tflite_inference_params();
  const ::tflite::evaluation::TfliteInferenceParams& tflite_inference_params() const;
  ::tflite::evaluation::TfliteInferenceParams* release_tflite_inference_params();
  ::tflite::evaluation::TfliteInferenceParams* mutable_tflite_inference_params();
  void set_allocated_tflite_inference_params(::tflite::evaluation::TfliteInferenceParams* tflite_inference_params);
  void unsafe_arena_set_allocated_tflite_inference_params(
      ::tflite::evaluation::TfliteInferenceParams* tflite_inference_params);
  ::tflite::evaluation::TfliteInferenceParams* unsafe_arena_release_tflite_inference_params();

  // optional .tflite.evaluation.ImageClassificationParams image_classification_params = 4;
  bool has_image_classification_params() const;
  void clear_image_classification_params();
  const ::tflite::evaluation::ImageClassificationParams& image_classification_params() const;
  ::tflite::evaluation::ImageClassificationParams* release_image_classification_params();
  ::tflite::evaluation::ImageClassificationParams* mutable_image_classification_params();
  void set_allocated_image_classification_params(::tflite::evaluation::ImageClassificationParams* image_classification_params);
  void unsafe_arena_set_allocated_image_classification_params(
      ::tflite::evaluation::ImageClassificationParams* image_classification_params);
  ::tflite::evaluation::ImageClassificationParams* unsafe_arena_release_image_classification_params();

  // optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams object_detection_average_precision_params = 5;
  bool has_object_detection_average_precision_params() const;
  void clear_object_detection_average_precision_params();
  const ::tflite::evaluation::ObjectDetectionAveragePrecisionParams& object_detection_average_precision_params() const;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* release_object_detection_average_precision_params();
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* mutable_object_detection_average_precision_params();
  void set_allocated_object_detection_average_precision_params(::tflite::evaluation::ObjectDetectionAveragePrecisionParams* object_detection_average_precision_params);
  void unsafe_arena_set_allocated_object_detection_average_precision_params(
      ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* object_detection_average_precision_params);
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* unsafe_arena_release_object_detection_average_precision_params();

  // optional .tflite.evaluation.ObjectDetectionParams object_detection_params = 6;
  bool has_object_detection_params() const;
  void clear_object_detection_params();
  const ::tflite::evaluation::ObjectDetectionParams& object_detection_params() const;
  ::tflite::evaluation::ObjectDetectionParams* release_object_detection_params();
  ::tflite::evaluation::ObjectDetectionParams* mutable_object_detection_params();
  void set_allocated_object_detection_params(::tflite::evaluation::ObjectDetectionParams* object_detection_params);
  void unsafe_arena_set_allocated_object_detection_params(
      ::tflite::evaluation::ObjectDetectionParams* object_detection_params);
  ::tflite::evaluation::ObjectDetectionParams* unsafe_arena_release_object_detection_params();

  void clear_params();
  ParamsCase params_case() const;
  // @@protoc_insertion_point(class_scope:tflite.evaluation.ProcessSpecification)
 private:
  class _Internal;
  void set_has_image_preprocessing_params();
  void set_has_topk_accuracy_eval_params();
  void set_has_tflite_inference_params();
  void set_has_image_classification_params();
  void set_has_object_detection_average_precision_params();
  void set_has_object_detection_params();

  inline bool has_params() const;
  inline void clear_has_params();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  union ParamsUnion {
    ParamsUnion() {}
    ::tflite::evaluation::ImagePreprocessingParams* image_preprocessing_params_;
    ::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params_;
    ::tflite::evaluation::TfliteInferenceParams* tflite_inference_params_;
    ::tflite::evaluation::ImageClassificationParams* image_classification_params_;
    ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* object_detection_average_precision_params_;
    ::tflite::evaluation::ObjectDetectionParams* object_detection_params_;
  } params_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class LatencyMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.LatencyMetrics) */ {
 public:
  LatencyMetrics();
  virtual ~LatencyMetrics();

  LatencyMetrics(const LatencyMetrics& from);
  LatencyMetrics(LatencyMetrics&& from) noexcept
    : LatencyMetrics() {
    *this = ::std::move(from);
  }

  inline LatencyMetrics& operator=(const LatencyMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline LatencyMetrics& operator=(LatencyMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LatencyMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LatencyMetrics* internal_default_instance() {
    return reinterpret_cast<const LatencyMetrics*>(
               &_LatencyMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LatencyMetrics& a, LatencyMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(LatencyMetrics* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LatencyMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LatencyMetrics* New() const final {
    return CreateMaybeMessage<LatencyMetrics>(nullptr);
  }

  LatencyMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LatencyMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LatencyMetrics& from);
  void MergeFrom(const LatencyMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LatencyMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.LatencyMetrics";
  }
  protected:
  explicit LatencyMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLastUsFieldNumber = 1,
    kMaxUsFieldNumber = 2,
    kMinUsFieldNumber = 3,
    kSumUsFieldNumber = 4,
    kAvgUsFieldNumber = 5,
    kStdDeviationUsFieldNumber = 6,
  };
  // optional int64 last_us = 1;
  bool has_last_us() const;
  void clear_last_us();
  ::PROTOBUF_NAMESPACE_ID::int64 last_us() const;
  void set_last_us(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 max_us = 2;
  bool has_max_us() const;
  void clear_max_us();
  ::PROTOBUF_NAMESPACE_ID::int64 max_us() const;
  void set_max_us(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 min_us = 3;
  bool has_min_us() const;
  void clear_min_us();
  ::PROTOBUF_NAMESPACE_ID::int64 min_us() const;
  void set_min_us(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 sum_us = 4;
  bool has_sum_us() const;
  void clear_sum_us();
  ::PROTOBUF_NAMESPACE_ID::int64 sum_us() const;
  void set_sum_us(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional double avg_us = 5;
  bool has_avg_us() const;
  void clear_avg_us();
  double avg_us() const;
  void set_avg_us(double value);

  // optional int64 std_deviation_us = 6;
  bool has_std_deviation_us() const;
  void clear_std_deviation_us();
  ::PROTOBUF_NAMESPACE_ID::int64 std_deviation_us() const;
  void set_std_deviation_us(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.LatencyMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_us_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_us_;
  ::PROTOBUF_NAMESPACE_ID::int64 min_us_;
  ::PROTOBUF_NAMESPACE_ID::int64 sum_us_;
  double avg_us_;
  ::PROTOBUF_NAMESPACE_ID::int64 std_deviation_us_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class AccuracyMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.AccuracyMetrics) */ {
 public:
  AccuracyMetrics();
  virtual ~AccuracyMetrics();

  AccuracyMetrics(const AccuracyMetrics& from);
  AccuracyMetrics(AccuracyMetrics&& from) noexcept
    : AccuracyMetrics() {
    *this = ::std::move(from);
  }

  inline AccuracyMetrics& operator=(const AccuracyMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccuracyMetrics& operator=(AccuracyMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AccuracyMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccuracyMetrics* internal_default_instance() {
    return reinterpret_cast<const AccuracyMetrics*>(
               &_AccuracyMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AccuracyMetrics& a, AccuracyMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(AccuracyMetrics* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccuracyMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AccuracyMetrics* New() const final {
    return CreateMaybeMessage<AccuracyMetrics>(nullptr);
  }

  AccuracyMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AccuracyMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AccuracyMetrics& from);
  void MergeFrom(const AccuracyMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccuracyMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.AccuracyMetrics";
  }
  protected:
  explicit AccuracyMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaxValueFieldNumber = 1,
    kMinValueFieldNumber = 2,
    kAvgValueFieldNumber = 3,
    kStdDeviationFieldNumber = 4,
  };
  // optional float max_value = 1;
  bool has_max_value() const;
  void clear_max_value();
  float max_value() const;
  void set_max_value(float value);

  // optional float min_value = 2;
  bool has_min_value() const;
  void clear_min_value();
  float min_value() const;
  void set_min_value(float value);

  // optional double avg_value = 3;
  bool has_avg_value() const;
  void clear_avg_value();
  double avg_value() const;
  void set_avg_value(double value);

  // optional float std_deviation = 4;
  bool has_std_deviation() const;
  void clear_std_deviation();
  float std_deviation() const;
  void set_std_deviation(float value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.AccuracyMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float max_value_;
  float min_value_;
  double avg_value_;
  float std_deviation_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ProcessMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ProcessMetrics) */ {
 public:
  ProcessMetrics();
  virtual ~ProcessMetrics();

  ProcessMetrics(const ProcessMetrics& from);
  ProcessMetrics(ProcessMetrics&& from) noexcept
    : ProcessMetrics() {
    *this = ::std::move(from);
  }

  inline ProcessMetrics& operator=(const ProcessMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessMetrics& operator=(ProcessMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcessMetrics& default_instance();

  enum StageMetricsCase {
    kTopkAccuracyMetrics = 2,
    kTfliteInferenceMetrics = 3,
    kImageClassificationMetrics = 4,
    kInferenceProfilerMetrics = 5,
    kObjectDetectionAveragePrecisionMetrics = 6,
    kObjectDetectionMetrics = 7,
    STAGE_METRICS_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessMetrics* internal_default_instance() {
    return reinterpret_cast<const ProcessMetrics*>(
               &_ProcessMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ProcessMetrics& a, ProcessMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessMetrics* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcessMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessMetrics* New() const final {
    return CreateMaybeMessage<ProcessMetrics>(nullptr);
  }

  ProcessMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcessMetrics& from);
  void MergeFrom(const ProcessMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcessMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ProcessMetrics";
  }
  protected:
  explicit ProcessMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTotalLatencyFieldNumber = 1,
    kTopkAccuracyMetricsFieldNumber = 2,
    kTfliteInferenceMetricsFieldNumber = 3,
    kImageClassificationMetricsFieldNumber = 4,
    kInferenceProfilerMetricsFieldNumber = 5,
    kObjectDetectionAveragePrecisionMetricsFieldNumber = 6,
    kObjectDetectionMetricsFieldNumber = 7,
  };
  // optional .tflite.evaluation.LatencyMetrics total_latency = 1;
  bool has_total_latency() const;
  void clear_total_latency();
  const ::tflite::evaluation::LatencyMetrics& total_latency() const;
  ::tflite::evaluation::LatencyMetrics* release_total_latency();
  ::tflite::evaluation::LatencyMetrics* mutable_total_latency();
  void set_allocated_total_latency(::tflite::evaluation::LatencyMetrics* total_latency);
  void unsafe_arena_set_allocated_total_latency(
      ::tflite::evaluation::LatencyMetrics* total_latency);
  ::tflite::evaluation::LatencyMetrics* unsafe_arena_release_total_latency();

  // optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 2;
  bool has_topk_accuracy_metrics() const;
  void clear_topk_accuracy_metrics();
  const ::tflite::evaluation::TopkAccuracyEvalMetrics& topk_accuracy_metrics() const;
  ::tflite::evaluation::TopkAccuracyEvalMetrics* release_topk_accuracy_metrics();
  ::tflite::evaluation::TopkAccuracyEvalMetrics* mutable_topk_accuracy_metrics();
  void set_allocated_topk_accuracy_metrics(::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics);
  void unsafe_arena_set_allocated_topk_accuracy_metrics(
      ::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics);
  ::tflite::evaluation::TopkAccuracyEvalMetrics* unsafe_arena_release_topk_accuracy_metrics();

  // optional .tflite.evaluation.TfliteInferenceMetrics tflite_inference_metrics = 3;
  bool has_tflite_inference_metrics() const;
  void clear_tflite_inference_metrics();
  const ::tflite::evaluation::TfliteInferenceMetrics& tflite_inference_metrics() const;
  ::tflite::evaluation::TfliteInferenceMetrics* release_tflite_inference_metrics();
  ::tflite::evaluation::TfliteInferenceMetrics* mutable_tflite_inference_metrics();
  void set_allocated_tflite_inference_metrics(::tflite::evaluation::TfliteInferenceMetrics* tflite_inference_metrics);
  void unsafe_arena_set_allocated_tflite_inference_metrics(
      ::tflite::evaluation::TfliteInferenceMetrics* tflite_inference_metrics);
  ::tflite::evaluation::TfliteInferenceMetrics* unsafe_arena_release_tflite_inference_metrics();

  // optional .tflite.evaluation.ImageClassificationMetrics image_classification_metrics = 4;
  bool has_image_classification_metrics() const;
  void clear_image_classification_metrics();
  const ::tflite::evaluation::ImageClassificationMetrics& image_classification_metrics() const;
  ::tflite::evaluation::ImageClassificationMetrics* release_image_classification_metrics();
  ::tflite::evaluation::ImageClassificationMetrics* mutable_image_classification_metrics();
  void set_allocated_image_classification_metrics(::tflite::evaluation::ImageClassificationMetrics* image_classification_metrics);
  void unsafe_arena_set_allocated_image_classification_metrics(
      ::tflite::evaluation::ImageClassificationMetrics* image_classification_metrics);
  ::tflite::evaluation::ImageClassificationMetrics* unsafe_arena_release_image_classification_metrics();

  // optional .tflite.evaluation.InferenceProfilerMetrics inference_profiler_metrics = 5;
  bool has_inference_profiler_metrics() const;
  void clear_inference_profiler_metrics();
  const ::tflite::evaluation::InferenceProfilerMetrics& inference_profiler_metrics() const;
  ::tflite::evaluation::InferenceProfilerMetrics* release_inference_profiler_metrics();
  ::tflite::evaluation::InferenceProfilerMetrics* mutable_inference_profiler_metrics();
  void set_allocated_inference_profiler_metrics(::tflite::evaluation::InferenceProfilerMetrics* inference_profiler_metrics);
  void unsafe_arena_set_allocated_inference_profiler_metrics(
      ::tflite::evaluation::InferenceProfilerMetrics* inference_profiler_metrics);
  ::tflite::evaluation::InferenceProfilerMetrics* unsafe_arena_release_inference_profiler_metrics();

  // optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics object_detection_average_precision_metrics = 6;
  bool has_object_detection_average_precision_metrics() const;
  void clear_object_detection_average_precision_metrics();
  const ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics& object_detection_average_precision_metrics() const;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* release_object_detection_average_precision_metrics();
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* mutable_object_detection_average_precision_metrics();
  void set_allocated_object_detection_average_precision_metrics(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* object_detection_average_precision_metrics);
  void unsafe_arena_set_allocated_object_detection_average_precision_metrics(
      ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* object_detection_average_precision_metrics);
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* unsafe_arena_release_object_detection_average_precision_metrics();

  // optional .tflite.evaluation.ObjectDetectionMetrics object_detection_metrics = 7;
  bool has_object_detection_metrics() const;
  void clear_object_detection_metrics();
  const ::tflite::evaluation::ObjectDetectionMetrics& object_detection_metrics() const;
  ::tflite::evaluation::ObjectDetectionMetrics* release_object_detection_metrics();
  ::tflite::evaluation::ObjectDetectionMetrics* mutable_object_detection_metrics();
  void set_allocated_object_detection_metrics(::tflite::evaluation::ObjectDetectionMetrics* object_detection_metrics);
  void unsafe_arena_set_allocated_object_detection_metrics(
      ::tflite::evaluation::ObjectDetectionMetrics* object_detection_metrics);
  ::tflite::evaluation::ObjectDetectionMetrics* unsafe_arena_release_object_detection_metrics();

  void clear_stage_metrics();
  StageMetricsCase stage_metrics_case() const;
  // @@protoc_insertion_point(class_scope:tflite.evaluation.ProcessMetrics)
 private:
  class _Internal;
  void set_has_topk_accuracy_metrics();
  void set_has_tflite_inference_metrics();
  void set_has_image_classification_metrics();
  void set_has_inference_profiler_metrics();
  void set_has_object_detection_average_precision_metrics();
  void set_has_object_detection_metrics();

  inline bool has_stage_metrics() const;
  inline void clear_has_stage_metrics();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::tflite::evaluation::LatencyMetrics* total_latency_;
  union StageMetricsUnion {
    StageMetricsUnion() {}
    ::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics_;
    ::tflite::evaluation::TfliteInferenceMetrics* tflite_inference_metrics_;
    ::tflite::evaluation::ImageClassificationMetrics* image_classification_metrics_;
    ::tflite::evaluation::InferenceProfilerMetrics* inference_profiler_metrics_;
    ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* object_detection_average_precision_metrics_;
    ::tflite::evaluation::ObjectDetectionMetrics* object_detection_metrics_;
  } stage_metrics_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ImagePreprocessingParams :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ImagePreprocessingParams) */ {
 public:
  ImagePreprocessingParams();
  virtual ~ImagePreprocessingParams();

  ImagePreprocessingParams(const ImagePreprocessingParams& from);
  ImagePreprocessingParams(ImagePreprocessingParams&& from) noexcept
    : ImagePreprocessingParams() {
    *this = ::std::move(from);
  }

  inline ImagePreprocessingParams& operator=(const ImagePreprocessingParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImagePreprocessingParams& operator=(ImagePreprocessingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImagePreprocessingParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImagePreprocessingParams* internal_default_instance() {
    return reinterpret_cast<const ImagePreprocessingParams*>(
               &_ImagePreprocessingParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ImagePreprocessingParams& a, ImagePreprocessingParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ImagePreprocessingParams* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImagePreprocessingParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImagePreprocessingParams* New() const final {
    return CreateMaybeMessage<ImagePreprocessingParams>(nullptr);
  }

  ImagePreprocessingParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImagePreprocessingParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImagePreprocessingParams& from);
  void MergeFrom(const ImagePreprocessingParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImagePreprocessingParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ImagePreprocessingParams";
  }
  protected:
  explicit ImagePreprocessingParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStepsFieldNumber = 1,
    kOutputTypeFieldNumber = 2,
  };
  // repeated .tflite.evaluation.ImagePreprocessingStepParams steps = 1;
  int steps_size() const;
  void clear_steps();
  ::tflite::evaluation::ImagePreprocessingStepParams* mutable_steps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ImagePreprocessingStepParams >*
      mutable_steps();
  const ::tflite::evaluation::ImagePreprocessingStepParams& steps(int index) const;
  ::tflite::evaluation::ImagePreprocessingStepParams* add_steps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ImagePreprocessingStepParams >&
      steps() const;

  // required int32 output_type = 2;
  bool has_output_type() const;
  void clear_output_type();
  ::PROTOBUF_NAMESPACE_ID::int32 output_type() const;
  void set_output_type(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ImagePreprocessingParams)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ImagePreprocessingStepParams > steps_;
  ::PROTOBUF_NAMESPACE_ID::int32 output_type_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class TfliteInferenceParams :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.TfliteInferenceParams) */ {
 public:
  TfliteInferenceParams();
  virtual ~TfliteInferenceParams();

  TfliteInferenceParams(const TfliteInferenceParams& from);
  TfliteInferenceParams(TfliteInferenceParams&& from) noexcept
    : TfliteInferenceParams() {
    *this = ::std::move(from);
  }

  inline TfliteInferenceParams& operator=(const TfliteInferenceParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline TfliteInferenceParams& operator=(TfliteInferenceParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TfliteInferenceParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TfliteInferenceParams* internal_default_instance() {
    return reinterpret_cast<const TfliteInferenceParams*>(
               &_TfliteInferenceParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TfliteInferenceParams& a, TfliteInferenceParams& b) {
    a.Swap(&b);
  }
  inline void Swap(TfliteInferenceParams* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TfliteInferenceParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TfliteInferenceParams* New() const final {
    return CreateMaybeMessage<TfliteInferenceParams>(nullptr);
  }

  TfliteInferenceParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TfliteInferenceParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TfliteInferenceParams& from);
  void MergeFrom(const TfliteInferenceParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TfliteInferenceParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.TfliteInferenceParams";
  }
  protected:
  explicit TfliteInferenceParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef TfliteInferenceParams_Delegate Delegate;
  static constexpr Delegate NONE =
    TfliteInferenceParams_Delegate_NONE;
  static constexpr Delegate NNAPI =
    TfliteInferenceParams_Delegate_NNAPI;
  static constexpr Delegate GPU =
    TfliteInferenceParams_Delegate_GPU;
  static constexpr Delegate HEXAGON =
    TfliteInferenceParams_Delegate_HEXAGON;
  static constexpr Delegate XNNPACK =
    TfliteInferenceParams_Delegate_XNNPACK;
  static inline bool Delegate_IsValid(int value) {
    return TfliteInferenceParams_Delegate_IsValid(value);
  }
  static constexpr Delegate Delegate_MIN =
    TfliteInferenceParams_Delegate_Delegate_MIN;
  static constexpr Delegate Delegate_MAX =
    TfliteInferenceParams_Delegate_Delegate_MAX;
  static constexpr int Delegate_ARRAYSIZE =
    TfliteInferenceParams_Delegate_Delegate_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Delegate_descriptor() {
    return TfliteInferenceParams_Delegate_descriptor();
  }
  template<typename T>
  static inline const std::string& Delegate_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Delegate>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Delegate_Name.");
    return TfliteInferenceParams_Delegate_Name(enum_t_value);
  }
  static inline bool Delegate_Parse(const std::string& name,
      Delegate* value) {
    return TfliteInferenceParams_Delegate_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kModelFilePathFieldNumber = 1,
    kDelegateFieldNumber = 2,
    kNumThreadsFieldNumber = 3,
    kInvocationsPerRunFieldNumber = 4,
  };
  // optional string model_file_path = 1;
  bool has_model_file_path() const;
  void clear_model_file_path();
  const std::string& model_file_path() const;
  void set_model_file_path(const std::string& value);
  void set_model_file_path(std::string&& value);
  void set_model_file_path(const char* value);
  void set_model_file_path(const char* value, size_t size);
  std::string* mutable_model_file_path();
  std::string* release_model_file_path();
  void set_allocated_model_file_path(std::string* model_file_path);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_model_file_path();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_model_file_path(
      std::string* model_file_path);

  // optional .tflite.evaluation.TfliteInferenceParams.Delegate delegate = 2;
  bool has_delegate() const;
  void clear_delegate();
  ::tflite::evaluation::TfliteInferenceParams_Delegate delegate() const;
  void set_delegate(::tflite::evaluation::TfliteInferenceParams_Delegate value);

  // optional int32 num_threads = 3 [default = 1];
  bool has_num_threads() const;
  void clear_num_threads();
  ::PROTOBUF_NAMESPACE_ID::int32 num_threads() const;
  void set_num_threads(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 invocations_per_run = 4 [default = 1];
  bool has_invocations_per_run() const;
  void clear_invocations_per_run();
  ::PROTOBUF_NAMESPACE_ID::int32 invocations_per_run() const;
  void set_invocations_per_run(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.TfliteInferenceParams)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_file_path_;
  int delegate_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_threads_;
  ::PROTOBUF_NAMESPACE_ID::int32 invocations_per_run_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class TfliteInferenceMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.TfliteInferenceMetrics) */ {
 public:
  TfliteInferenceMetrics();
  virtual ~TfliteInferenceMetrics();

  TfliteInferenceMetrics(const TfliteInferenceMetrics& from);
  TfliteInferenceMetrics(TfliteInferenceMetrics&& from) noexcept
    : TfliteInferenceMetrics() {
    *this = ::std::move(from);
  }

  inline TfliteInferenceMetrics& operator=(const TfliteInferenceMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline TfliteInferenceMetrics& operator=(TfliteInferenceMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TfliteInferenceMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TfliteInferenceMetrics* internal_default_instance() {
    return reinterpret_cast<const TfliteInferenceMetrics*>(
               &_TfliteInferenceMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(TfliteInferenceMetrics& a, TfliteInferenceMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(TfliteInferenceMetrics* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TfliteInferenceMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TfliteInferenceMetrics* New() const final {
    return CreateMaybeMessage<TfliteInferenceMetrics>(nullptr);
  }

  TfliteInferenceMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TfliteInferenceMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TfliteInferenceMetrics& from);
  void MergeFrom(const TfliteInferenceMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TfliteInferenceMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.TfliteInferenceMetrics";
  }
  protected:
  explicit TfliteInferenceMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumInferencesFieldNumber = 1,
  };
  // optional int32 num_inferences = 1;
  bool has_num_inferences() const;
  void clear_num_inferences();
  ::PROTOBUF_NAMESPACE_ID::int32 num_inferences() const;
  void set_num_inferences(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.TfliteInferenceMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_inferences_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class TopkAccuracyEvalParams :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.TopkAccuracyEvalParams) */ {
 public:
  TopkAccuracyEvalParams();
  virtual ~TopkAccuracyEvalParams();

  TopkAccuracyEvalParams(const TopkAccuracyEvalParams& from);
  TopkAccuracyEvalParams(TopkAccuracyEvalParams&& from) noexcept
    : TopkAccuracyEvalParams() {
    *this = ::std::move(from);
  }

  inline TopkAccuracyEvalParams& operator=(const TopkAccuracyEvalParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline TopkAccuracyEvalParams& operator=(TopkAccuracyEvalParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TopkAccuracyEvalParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TopkAccuracyEvalParams* internal_default_instance() {
    return reinterpret_cast<const TopkAccuracyEvalParams*>(
               &_TopkAccuracyEvalParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(TopkAccuracyEvalParams& a, TopkAccuracyEvalParams& b) {
    a.Swap(&b);
  }
  inline void Swap(TopkAccuracyEvalParams* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TopkAccuracyEvalParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TopkAccuracyEvalParams* New() const final {
    return CreateMaybeMessage<TopkAccuracyEvalParams>(nullptr);
  }

  TopkAccuracyEvalParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TopkAccuracyEvalParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TopkAccuracyEvalParams& from);
  void MergeFrom(const TopkAccuracyEvalParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TopkAccuracyEvalParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.TopkAccuracyEvalParams";
  }
  protected:
  explicit TopkAccuracyEvalParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKFieldNumber = 1,
  };
  // optional int32 k = 1;
  bool has_k() const;
  void clear_k();
  ::PROTOBUF_NAMESPACE_ID::int32 k() const;
  void set_k(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.TopkAccuracyEvalParams)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 k_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class TopkAccuracyEvalMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.TopkAccuracyEvalMetrics) */ {
 public:
  TopkAccuracyEvalMetrics();
  virtual ~TopkAccuracyEvalMetrics();

  TopkAccuracyEvalMetrics(const TopkAccuracyEvalMetrics& from);
  TopkAccuracyEvalMetrics(TopkAccuracyEvalMetrics&& from) noexcept
    : TopkAccuracyEvalMetrics() {
    *this = ::std::move(from);
  }

  inline TopkAccuracyEvalMetrics& operator=(const TopkAccuracyEvalMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline TopkAccuracyEvalMetrics& operator=(TopkAccuracyEvalMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TopkAccuracyEvalMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TopkAccuracyEvalMetrics* internal_default_instance() {
    return reinterpret_cast<const TopkAccuracyEvalMetrics*>(
               &_TopkAccuracyEvalMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(TopkAccuracyEvalMetrics& a, TopkAccuracyEvalMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(TopkAccuracyEvalMetrics* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TopkAccuracyEvalMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TopkAccuracyEvalMetrics* New() const final {
    return CreateMaybeMessage<TopkAccuracyEvalMetrics>(nullptr);
  }

  TopkAccuracyEvalMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TopkAccuracyEvalMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TopkAccuracyEvalMetrics& from);
  void MergeFrom(const TopkAccuracyEvalMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TopkAccuracyEvalMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.TopkAccuracyEvalMetrics";
  }
  protected:
  explicit TopkAccuracyEvalMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTopkAccuraciesFieldNumber = 1,
  };
  // repeated float topk_accuracies = 1;
  int topk_accuracies_size() const;
  void clear_topk_accuracies();
  float topk_accuracies(int index) const;
  void set_topk_accuracies(int index, float value);
  void add_topk_accuracies(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      topk_accuracies() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_topk_accuracies();

  // @@protoc_insertion_point(class_scope:tflite.evaluation.TopkAccuracyEvalMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > topk_accuracies_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ImageClassificationParams :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ImageClassificationParams) */ {
 public:
  ImageClassificationParams();
  virtual ~ImageClassificationParams();

  ImageClassificationParams(const ImageClassificationParams& from);
  ImageClassificationParams(ImageClassificationParams&& from) noexcept
    : ImageClassificationParams() {
    *this = ::std::move(from);
  }

  inline ImageClassificationParams& operator=(const ImageClassificationParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageClassificationParams& operator=(ImageClassificationParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImageClassificationParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageClassificationParams* internal_default_instance() {
    return reinterpret_cast<const ImageClassificationParams*>(
               &_ImageClassificationParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ImageClassificationParams& a, ImageClassificationParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ImageClassificationParams* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImageClassificationParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImageClassificationParams* New() const final {
    return CreateMaybeMessage<ImageClassificationParams>(nullptr);
  }

  ImageClassificationParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImageClassificationParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImageClassificationParams& from);
  void MergeFrom(const ImageClassificationParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageClassificationParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ImageClassificationParams";
  }
  protected:
  explicit ImageClassificationParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInferenceParamsFieldNumber = 1,
    kTopkAccuracyEvalParamsFieldNumber = 2,
  };
  // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
  bool has_inference_params() const;
  void clear_inference_params();
  const ::tflite::evaluation::TfliteInferenceParams& inference_params() const;
  ::tflite::evaluation::TfliteInferenceParams* release_inference_params();
  ::tflite::evaluation::TfliteInferenceParams* mutable_inference_params();
  void set_allocated_inference_params(::tflite::evaluation::TfliteInferenceParams* inference_params);
  void unsafe_arena_set_allocated_inference_params(
      ::tflite::evaluation::TfliteInferenceParams* inference_params);
  ::tflite::evaluation::TfliteInferenceParams* unsafe_arena_release_inference_params();

  // optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
  bool has_topk_accuracy_eval_params() const;
  void clear_topk_accuracy_eval_params();
  const ::tflite::evaluation::TopkAccuracyEvalParams& topk_accuracy_eval_params() const;
  ::tflite::evaluation::TopkAccuracyEvalParams* release_topk_accuracy_eval_params();
  ::tflite::evaluation::TopkAccuracyEvalParams* mutable_topk_accuracy_eval_params();
  void set_allocated_topk_accuracy_eval_params(::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params);
  void unsafe_arena_set_allocated_topk_accuracy_eval_params(
      ::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params);
  ::tflite::evaluation::TopkAccuracyEvalParams* unsafe_arena_release_topk_accuracy_eval_params();

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ImageClassificationParams)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::tflite::evaluation::TfliteInferenceParams* inference_params_;
  ::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ImageClassificationMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ImageClassificationMetrics) */ {
 public:
  ImageClassificationMetrics();
  virtual ~ImageClassificationMetrics();

  ImageClassificationMetrics(const ImageClassificationMetrics& from);
  ImageClassificationMetrics(ImageClassificationMetrics&& from) noexcept
    : ImageClassificationMetrics() {
    *this = ::std::move(from);
  }

  inline ImageClassificationMetrics& operator=(const ImageClassificationMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageClassificationMetrics& operator=(ImageClassificationMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImageClassificationMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageClassificationMetrics* internal_default_instance() {
    return reinterpret_cast<const ImageClassificationMetrics*>(
               &_ImageClassificationMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ImageClassificationMetrics& a, ImageClassificationMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(ImageClassificationMetrics* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImageClassificationMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImageClassificationMetrics* New() const final {
    return CreateMaybeMessage<ImageClassificationMetrics>(nullptr);
  }

  ImageClassificationMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImageClassificationMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImageClassificationMetrics& from);
  void MergeFrom(const ImageClassificationMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageClassificationMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ImageClassificationMetrics";
  }
  protected:
  explicit ImageClassificationMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPreProcessingLatencyFieldNumber = 1,
    kInferenceLatencyFieldNumber = 2,
    kInferenceMetricsFieldNumber = 3,
    kTopkAccuracyMetricsFieldNumber = 4,
  };
  // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
  bool has_pre_processing_latency() const;
  void clear_pre_processing_latency();
  const ::tflite::evaluation::LatencyMetrics& pre_processing_latency() const;
  ::tflite::evaluation::LatencyMetrics* release_pre_processing_latency();
  ::tflite::evaluation::LatencyMetrics* mutable_pre_processing_latency();
  void set_allocated_pre_processing_latency(::tflite::evaluation::LatencyMetrics* pre_processing_latency);
  void unsafe_arena_set_allocated_pre_processing_latency(
      ::tflite::evaluation::LatencyMetrics* pre_processing_latency);
  ::tflite::evaluation::LatencyMetrics* unsafe_arena_release_pre_processing_latency();

  // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
  bool has_inference_latency() const;
  void clear_inference_latency();
  const ::tflite::evaluation::LatencyMetrics& inference_latency() const;
  ::tflite::evaluation::LatencyMetrics* release_inference_latency();
  ::tflite::evaluation::LatencyMetrics* mutable_inference_latency();
  void set_allocated_inference_latency(::tflite::evaluation::LatencyMetrics* inference_latency);
  void unsafe_arena_set_allocated_inference_latency(
      ::tflite::evaluation::LatencyMetrics* inference_latency);
  ::tflite::evaluation::LatencyMetrics* unsafe_arena_release_inference_latency();

  // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
  bool has_inference_metrics() const;
  void clear_inference_metrics();
  const ::tflite::evaluation::TfliteInferenceMetrics& inference_metrics() const;
  ::tflite::evaluation::TfliteInferenceMetrics* release_inference_metrics();
  ::tflite::evaluation::TfliteInferenceMetrics* mutable_inference_metrics();
  void set_allocated_inference_metrics(::tflite::evaluation::TfliteInferenceMetrics* inference_metrics);
  void unsafe_arena_set_allocated_inference_metrics(
      ::tflite::evaluation::TfliteInferenceMetrics* inference_metrics);
  ::tflite::evaluation::TfliteInferenceMetrics* unsafe_arena_release_inference_metrics();

  // optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 4;
  bool has_topk_accuracy_metrics() const;
  void clear_topk_accuracy_metrics();
  const ::tflite::evaluation::TopkAccuracyEvalMetrics& topk_accuracy_metrics() const;
  ::tflite::evaluation::TopkAccuracyEvalMetrics* release_topk_accuracy_metrics();
  ::tflite::evaluation::TopkAccuracyEvalMetrics* mutable_topk_accuracy_metrics();
  void set_allocated_topk_accuracy_metrics(::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics);
  void unsafe_arena_set_allocated_topk_accuracy_metrics(
      ::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics);
  ::tflite::evaluation::TopkAccuracyEvalMetrics* unsafe_arena_release_topk_accuracy_metrics();

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ImageClassificationMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::tflite::evaluation::LatencyMetrics* pre_processing_latency_;
  ::tflite::evaluation::LatencyMetrics* inference_latency_;
  ::tflite::evaluation::TfliteInferenceMetrics* inference_metrics_;
  ::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class InferenceProfilerMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.InferenceProfilerMetrics) */ {
 public:
  InferenceProfilerMetrics();
  virtual ~InferenceProfilerMetrics();

  InferenceProfilerMetrics(const InferenceProfilerMetrics& from);
  InferenceProfilerMetrics(InferenceProfilerMetrics&& from) noexcept
    : InferenceProfilerMetrics() {
    *this = ::std::move(from);
  }

  inline InferenceProfilerMetrics& operator=(const InferenceProfilerMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline InferenceProfilerMetrics& operator=(InferenceProfilerMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InferenceProfilerMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InferenceProfilerMetrics* internal_default_instance() {
    return reinterpret_cast<const InferenceProfilerMetrics*>(
               &_InferenceProfilerMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(InferenceProfilerMetrics& a, InferenceProfilerMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(InferenceProfilerMetrics* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InferenceProfilerMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InferenceProfilerMetrics* New() const final {
    return CreateMaybeMessage<InferenceProfilerMetrics>(nullptr);
  }

  InferenceProfilerMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InferenceProfilerMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InferenceProfilerMetrics& from);
  void MergeFrom(const InferenceProfilerMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InferenceProfilerMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.InferenceProfilerMetrics";
  }
  protected:
  explicit InferenceProfilerMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutputErrorsFieldNumber = 3,
    kReferenceLatencyFieldNumber = 1,
    kTestLatencyFieldNumber = 2,
  };
  // repeated .tflite.evaluation.AccuracyMetrics output_errors = 3;
  int output_errors_size() const;
  void clear_output_errors();
  ::tflite::evaluation::AccuracyMetrics* mutable_output_errors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::AccuracyMetrics >*
      mutable_output_errors();
  const ::tflite::evaluation::AccuracyMetrics& output_errors(int index) const;
  ::tflite::evaluation::AccuracyMetrics* add_output_errors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::AccuracyMetrics >&
      output_errors() const;

  // optional .tflite.evaluation.LatencyMetrics reference_latency = 1;
  bool has_reference_latency() const;
  void clear_reference_latency();
  const ::tflite::evaluation::LatencyMetrics& reference_latency() const;
  ::tflite::evaluation::LatencyMetrics* release_reference_latency();
  ::tflite::evaluation::LatencyMetrics* mutable_reference_latency();
  void set_allocated_reference_latency(::tflite::evaluation::LatencyMetrics* reference_latency);
  void unsafe_arena_set_allocated_reference_latency(
      ::tflite::evaluation::LatencyMetrics* reference_latency);
  ::tflite::evaluation::LatencyMetrics* unsafe_arena_release_reference_latency();

  // optional .tflite.evaluation.LatencyMetrics test_latency = 2;
  bool has_test_latency() const;
  void clear_test_latency();
  const ::tflite::evaluation::LatencyMetrics& test_latency() const;
  ::tflite::evaluation::LatencyMetrics* release_test_latency();
  ::tflite::evaluation::LatencyMetrics* mutable_test_latency();
  void set_allocated_test_latency(::tflite::evaluation::LatencyMetrics* test_latency);
  void unsafe_arena_set_allocated_test_latency(
      ::tflite::evaluation::LatencyMetrics* test_latency);
  ::tflite::evaluation::LatencyMetrics* unsafe_arena_release_test_latency();

  // @@protoc_insertion_point(class_scope:tflite.evaluation.InferenceProfilerMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::AccuracyMetrics > output_errors_;
  ::tflite::evaluation::LatencyMetrics* reference_latency_;
  ::tflite::evaluation::LatencyMetrics* test_latency_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox) */ {
 public:
  ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox();
  virtual ~ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox();

  ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox(const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& from);
  ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox(ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox&& from) noexcept
    : ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox() {
    *this = ::std::move(from);
  }

  inline ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& operator=(const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& operator=(ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* internal_default_instance() {
    return reinterpret_cast<const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox*>(
               &_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& a, ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* New() const final {
    return CreateMaybeMessage<ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox>(nullptr);
  }

  ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& from);
  void MergeFrom(const ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox";
  }
  protected:
  explicit ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNormalizedTopFieldNumber = 1,
    kNormalizedBottomFieldNumber = 2,
    kNormalizedLeftFieldNumber = 3,
    kNormalizedRightFieldNumber = 4,
  };
  // optional float normalized_top = 1;
  bool has_normalized_top() const;
  void clear_normalized_top();
  float normalized_top() const;
  void set_normalized_top(float value);

  // optional float normalized_bottom = 2;
  bool has_normalized_bottom() const;
  void clear_normalized_bottom();
  float normalized_bottom() const;
  void set_normalized_bottom(float value);

  // optional float normalized_left = 3;
  bool has_normalized_left() const;
  void clear_normalized_left();
  float normalized_left() const;
  void set_normalized_left(float value);

  // optional float normalized_right = 4;
  bool has_normalized_right() const;
  void clear_normalized_right();
  float normalized_right() const;
  void set_normalized_right(float value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float normalized_top_;
  float normalized_bottom_;
  float normalized_left_;
  float normalized_right_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetectionResult_ObjectInstance :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ObjectDetectionResult.ObjectInstance) */ {
 public:
  ObjectDetectionResult_ObjectInstance();
  virtual ~ObjectDetectionResult_ObjectInstance();

  ObjectDetectionResult_ObjectInstance(const ObjectDetectionResult_ObjectInstance& from);
  ObjectDetectionResult_ObjectInstance(ObjectDetectionResult_ObjectInstance&& from) noexcept
    : ObjectDetectionResult_ObjectInstance() {
    *this = ::std::move(from);
  }

  inline ObjectDetectionResult_ObjectInstance& operator=(const ObjectDetectionResult_ObjectInstance& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionResult_ObjectInstance& operator=(ObjectDetectionResult_ObjectInstance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDetectionResult_ObjectInstance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDetectionResult_ObjectInstance* internal_default_instance() {
    return reinterpret_cast<const ObjectDetectionResult_ObjectInstance*>(
               &_ObjectDetectionResult_ObjectInstance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ObjectDetectionResult_ObjectInstance& a, ObjectDetectionResult_ObjectInstance& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetectionResult_ObjectInstance* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionResult_ObjectInstance* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDetectionResult_ObjectInstance* New() const final {
    return CreateMaybeMessage<ObjectDetectionResult_ObjectInstance>(nullptr);
  }

  ObjectDetectionResult_ObjectInstance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDetectionResult_ObjectInstance>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDetectionResult_ObjectInstance& from);
  void MergeFrom(const ObjectDetectionResult_ObjectInstance& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetectionResult_ObjectInstance* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ObjectDetectionResult.ObjectInstance";
  }
  protected:
  explicit ObjectDetectionResult_ObjectInstance(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox NormalizedBoundingBox;

  // accessors -------------------------------------------------------

  enum : int {
    kBoundingBoxFieldNumber = 2,
    kClassIdFieldNumber = 1,
    kScoreFieldNumber = 3,
  };
  // optional .tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox bounding_box = 2;
  bool has_bounding_box() const;
  void clear_bounding_box();
  const ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& bounding_box() const;
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* release_bounding_box();
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* mutable_bounding_box();
  void set_allocated_bounding_box(::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* bounding_box);
  void unsafe_arena_set_allocated_bounding_box(
      ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* bounding_box);
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* unsafe_arena_release_bounding_box();

  // optional int32 class_id = 1;
  bool has_class_id() const;
  void clear_class_id();
  ::PROTOBUF_NAMESPACE_ID::int32 class_id() const;
  void set_class_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional float score = 3 [default = 1];
  bool has_score() const;
  void clear_score();
  float score() const;
  void set_score(float value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ObjectDetectionResult.ObjectInstance)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* bounding_box_;
  ::PROTOBUF_NAMESPACE_ID::int32 class_id_;
  float score_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetectionResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ObjectDetectionResult) */ {
 public:
  ObjectDetectionResult();
  virtual ~ObjectDetectionResult();

  ObjectDetectionResult(const ObjectDetectionResult& from);
  ObjectDetectionResult(ObjectDetectionResult&& from) noexcept
    : ObjectDetectionResult() {
    *this = ::std::move(from);
  }

  inline ObjectDetectionResult& operator=(const ObjectDetectionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionResult& operator=(ObjectDetectionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDetectionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDetectionResult* internal_default_instance() {
    return reinterpret_cast<const ObjectDetectionResult*>(
               &_ObjectDetectionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ObjectDetectionResult& a, ObjectDetectionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetectionResult* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDetectionResult* New() const final {
    return CreateMaybeMessage<ObjectDetectionResult>(nullptr);
  }

  ObjectDetectionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDetectionResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDetectionResult& from);
  void MergeFrom(const ObjectDetectionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetectionResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ObjectDetectionResult";
  }
  protected:
  explicit ObjectDetectionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ObjectDetectionResult_ObjectInstance ObjectInstance;

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 1,
    kImageNameFieldNumber = 2,
    kImageIdFieldNumber = 3,
  };
  // repeated .tflite.evaluation.ObjectDetectionResult.ObjectInstance objects = 1;
  int objects_size() const;
  void clear_objects();
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance* mutable_objects(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance >*
      mutable_objects();
  const ::tflite::evaluation::ObjectDetectionResult_ObjectInstance& objects(int index) const;
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance* add_objects();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance >&
      objects() const;

  // optional string image_name = 2;
  bool has_image_name() const;
  void clear_image_name();
  const std::string& image_name() const;
  void set_image_name(const std::string& value);
  void set_image_name(std::string&& value);
  void set_image_name(const char* value);
  void set_image_name(const char* value, size_t size);
  std::string* mutable_image_name();
  std::string* release_image_name();
  void set_allocated_image_name(std::string* image_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_image_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_image_name(
      std::string* image_name);

  // optional int64 image_id = 3;
  bool has_image_id() const;
  void clear_image_id();
  ::PROTOBUF_NAMESPACE_ID::int64 image_id() const;
  void set_image_id(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ObjectDetectionResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance > objects_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_name_;
  ::PROTOBUF_NAMESPACE_ID::int64 image_id_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetectionGroundTruth :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ObjectDetectionGroundTruth) */ {
 public:
  ObjectDetectionGroundTruth();
  virtual ~ObjectDetectionGroundTruth();

  ObjectDetectionGroundTruth(const ObjectDetectionGroundTruth& from);
  ObjectDetectionGroundTruth(ObjectDetectionGroundTruth&& from) noexcept
    : ObjectDetectionGroundTruth() {
    *this = ::std::move(from);
  }

  inline ObjectDetectionGroundTruth& operator=(const ObjectDetectionGroundTruth& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionGroundTruth& operator=(ObjectDetectionGroundTruth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDetectionGroundTruth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDetectionGroundTruth* internal_default_instance() {
    return reinterpret_cast<const ObjectDetectionGroundTruth*>(
               &_ObjectDetectionGroundTruth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ObjectDetectionGroundTruth& a, ObjectDetectionGroundTruth& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetectionGroundTruth* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionGroundTruth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDetectionGroundTruth* New() const final {
    return CreateMaybeMessage<ObjectDetectionGroundTruth>(nullptr);
  }

  ObjectDetectionGroundTruth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDetectionGroundTruth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDetectionGroundTruth& from);
  void MergeFrom(const ObjectDetectionGroundTruth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetectionGroundTruth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ObjectDetectionGroundTruth";
  }
  protected:
  explicit ObjectDetectionGroundTruth(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetectionResultsFieldNumber = 1,
  };
  // repeated .tflite.evaluation.ObjectDetectionResult detection_results = 1;
  int detection_results_size() const;
  void clear_detection_results();
  ::tflite::evaluation::ObjectDetectionResult* mutable_detection_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult >*
      mutable_detection_results();
  const ::tflite::evaluation::ObjectDetectionResult& detection_results(int index) const;
  ::tflite::evaluation::ObjectDetectionResult* add_detection_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult >&
      detection_results() const;

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ObjectDetectionGroundTruth)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult > detection_results_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetectionAveragePrecisionParams :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ObjectDetectionAveragePrecisionParams) */ {
 public:
  ObjectDetectionAveragePrecisionParams();
  virtual ~ObjectDetectionAveragePrecisionParams();

  ObjectDetectionAveragePrecisionParams(const ObjectDetectionAveragePrecisionParams& from);
  ObjectDetectionAveragePrecisionParams(ObjectDetectionAveragePrecisionParams&& from) noexcept
    : ObjectDetectionAveragePrecisionParams() {
    *this = ::std::move(from);
  }

  inline ObjectDetectionAveragePrecisionParams& operator=(const ObjectDetectionAveragePrecisionParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionAveragePrecisionParams& operator=(ObjectDetectionAveragePrecisionParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDetectionAveragePrecisionParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDetectionAveragePrecisionParams* internal_default_instance() {
    return reinterpret_cast<const ObjectDetectionAveragePrecisionParams*>(
               &_ObjectDetectionAveragePrecisionParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ObjectDetectionAveragePrecisionParams& a, ObjectDetectionAveragePrecisionParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetectionAveragePrecisionParams* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionAveragePrecisionParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDetectionAveragePrecisionParams* New() const final {
    return CreateMaybeMessage<ObjectDetectionAveragePrecisionParams>(nullptr);
  }

  ObjectDetectionAveragePrecisionParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDetectionAveragePrecisionParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDetectionAveragePrecisionParams& from);
  void MergeFrom(const ObjectDetectionAveragePrecisionParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetectionAveragePrecisionParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ObjectDetectionAveragePrecisionParams";
  }
  protected:
  explicit ObjectDetectionAveragePrecisionParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIouThresholdsFieldNumber = 2,
    kNumClassesFieldNumber = 1,
    kNumRecallPointsFieldNumber = 3,
  };
  // repeated float iou_thresholds = 2;
  int iou_thresholds_size() const;
  void clear_iou_thresholds();
  float iou_thresholds(int index) const;
  void set_iou_thresholds(int index, float value);
  void add_iou_thresholds(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      iou_thresholds() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_iou_thresholds();

  // optional int32 num_classes = 1;
  bool has_num_classes() const;
  void clear_num_classes();
  ::PROTOBUF_NAMESPACE_ID::int32 num_classes() const;
  void set_num_classes(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_recall_points = 3 [default = 100];
  bool has_num_recall_points() const;
  void clear_num_recall_points();
  ::PROTOBUF_NAMESPACE_ID::int32 num_recall_points() const;
  void set_num_recall_points(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ObjectDetectionAveragePrecisionParams)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > iou_thresholds_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_classes_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_recall_points_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetectionAveragePrecisionMetrics_AveragePrecision :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision) */ {
 public:
  ObjectDetectionAveragePrecisionMetrics_AveragePrecision();
  virtual ~ObjectDetectionAveragePrecisionMetrics_AveragePrecision();

  ObjectDetectionAveragePrecisionMetrics_AveragePrecision(const ObjectDetectionAveragePrecisionMetrics_AveragePrecision& from);
  ObjectDetectionAveragePrecisionMetrics_AveragePrecision(ObjectDetectionAveragePrecisionMetrics_AveragePrecision&& from) noexcept
    : ObjectDetectionAveragePrecisionMetrics_AveragePrecision() {
    *this = ::std::move(from);
  }

  inline ObjectDetectionAveragePrecisionMetrics_AveragePrecision& operator=(const ObjectDetectionAveragePrecisionMetrics_AveragePrecision& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionAveragePrecisionMetrics_AveragePrecision& operator=(ObjectDetectionAveragePrecisionMetrics_AveragePrecision&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDetectionAveragePrecisionMetrics_AveragePrecision& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDetectionAveragePrecisionMetrics_AveragePrecision* internal_default_instance() {
    return reinterpret_cast<const ObjectDetectionAveragePrecisionMetrics_AveragePrecision*>(
               &_ObjectDetectionAveragePrecisionMetrics_AveragePrecision_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ObjectDetectionAveragePrecisionMetrics_AveragePrecision& a, ObjectDetectionAveragePrecisionMetrics_AveragePrecision& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetectionAveragePrecisionMetrics_AveragePrecision* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionAveragePrecisionMetrics_AveragePrecision* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDetectionAveragePrecisionMetrics_AveragePrecision* New() const final {
    return CreateMaybeMessage<ObjectDetectionAveragePrecisionMetrics_AveragePrecision>(nullptr);
  }

  ObjectDetectionAveragePrecisionMetrics_AveragePrecision* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDetectionAveragePrecisionMetrics_AveragePrecision>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDetectionAveragePrecisionMetrics_AveragePrecision& from);
  void MergeFrom(const ObjectDetectionAveragePrecisionMetrics_AveragePrecision& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetectionAveragePrecisionMetrics_AveragePrecision* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision";
  }
  protected:
  explicit ObjectDetectionAveragePrecisionMetrics_AveragePrecision(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIouThresholdFieldNumber = 1,
    kAveragePrecisionFieldNumber = 2,
  };
  // optional float iou_threshold = 1;
  bool has_iou_threshold() const;
  void clear_iou_threshold();
  float iou_threshold() const;
  void set_iou_threshold(float value);

  // optional float average_precision = 2;
  bool has_average_precision() const;
  void clear_average_precision();
  float average_precision() const;
  void set_average_precision(float value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float iou_threshold_;
  float average_precision_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetectionAveragePrecisionMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics) */ {
 public:
  ObjectDetectionAveragePrecisionMetrics();
  virtual ~ObjectDetectionAveragePrecisionMetrics();

  ObjectDetectionAveragePrecisionMetrics(const ObjectDetectionAveragePrecisionMetrics& from);
  ObjectDetectionAveragePrecisionMetrics(ObjectDetectionAveragePrecisionMetrics&& from) noexcept
    : ObjectDetectionAveragePrecisionMetrics() {
    *this = ::std::move(from);
  }

  inline ObjectDetectionAveragePrecisionMetrics& operator=(const ObjectDetectionAveragePrecisionMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionAveragePrecisionMetrics& operator=(ObjectDetectionAveragePrecisionMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDetectionAveragePrecisionMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDetectionAveragePrecisionMetrics* internal_default_instance() {
    return reinterpret_cast<const ObjectDetectionAveragePrecisionMetrics*>(
               &_ObjectDetectionAveragePrecisionMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ObjectDetectionAveragePrecisionMetrics& a, ObjectDetectionAveragePrecisionMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetectionAveragePrecisionMetrics* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionAveragePrecisionMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDetectionAveragePrecisionMetrics* New() const final {
    return CreateMaybeMessage<ObjectDetectionAveragePrecisionMetrics>(nullptr);
  }

  ObjectDetectionAveragePrecisionMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDetectionAveragePrecisionMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDetectionAveragePrecisionMetrics& from);
  void MergeFrom(const ObjectDetectionAveragePrecisionMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetectionAveragePrecisionMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ObjectDetectionAveragePrecisionMetrics";
  }
  protected:
  explicit ObjectDetectionAveragePrecisionMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ObjectDetectionAveragePrecisionMetrics_AveragePrecision AveragePrecision;

  // accessors -------------------------------------------------------

  enum : int {
    kIndividualAveragePrecisionsFieldNumber = 1,
    kOverallMeanAveragePrecisionFieldNumber = 2,
  };
  // repeated .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision individual_average_precisions = 1;
  int individual_average_precisions_size() const;
  void clear_individual_average_precisions();
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision* mutable_individual_average_precisions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision >*
      mutable_individual_average_precisions();
  const ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision& individual_average_precisions(int index) const;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision* add_individual_average_precisions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision >&
      individual_average_precisions() const;

  // optional float overall_mean_average_precision = 2;
  bool has_overall_mean_average_precision() const;
  void clear_overall_mean_average_precision();
  float overall_mean_average_precision() const;
  void set_overall_mean_average_precision(float value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision > individual_average_precisions_;
  float overall_mean_average_precision_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetectionParams :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ObjectDetectionParams) */ {
 public:
  ObjectDetectionParams();
  virtual ~ObjectDetectionParams();

  ObjectDetectionParams(const ObjectDetectionParams& from);
  ObjectDetectionParams(ObjectDetectionParams&& from) noexcept
    : ObjectDetectionParams() {
    *this = ::std::move(from);
  }

  inline ObjectDetectionParams& operator=(const ObjectDetectionParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionParams& operator=(ObjectDetectionParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDetectionParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDetectionParams* internal_default_instance() {
    return reinterpret_cast<const ObjectDetectionParams*>(
               &_ObjectDetectionParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ObjectDetectionParams& a, ObjectDetectionParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetectionParams* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDetectionParams* New() const final {
    return CreateMaybeMessage<ObjectDetectionParams>(nullptr);
  }

  ObjectDetectionParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDetectionParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDetectionParams& from);
  void MergeFrom(const ObjectDetectionParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetectionParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ObjectDetectionParams";
  }
  protected:
  explicit ObjectDetectionParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInferenceParamsFieldNumber = 1,
    kApParamsFieldNumber = 3,
    kClassOffsetFieldNumber = 2,
  };
  // optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
  bool has_inference_params() const;
  void clear_inference_params();
  const ::tflite::evaluation::TfliteInferenceParams& inference_params() const;
  ::tflite::evaluation::TfliteInferenceParams* release_inference_params();
  ::tflite::evaluation::TfliteInferenceParams* mutable_inference_params();
  void set_allocated_inference_params(::tflite::evaluation::TfliteInferenceParams* inference_params);
  void unsafe_arena_set_allocated_inference_params(
      ::tflite::evaluation::TfliteInferenceParams* inference_params);
  ::tflite::evaluation::TfliteInferenceParams* unsafe_arena_release_inference_params();

  // optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams ap_params = 3;
  bool has_ap_params() const;
  void clear_ap_params();
  const ::tflite::evaluation::ObjectDetectionAveragePrecisionParams& ap_params() const;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* release_ap_params();
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* mutable_ap_params();
  void set_allocated_ap_params(::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ap_params);
  void unsafe_arena_set_allocated_ap_params(
      ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ap_params);
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* unsafe_arena_release_ap_params();

  // optional int32 class_offset = 2 [default = 1];
  bool has_class_offset() const;
  void clear_class_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 class_offset() const;
  void set_class_offset(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ObjectDetectionParams)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::tflite::evaluation::TfliteInferenceParams* inference_params_;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ap_params_;
  ::PROTOBUF_NAMESPACE_ID::int32 class_offset_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetectionMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tflite.evaluation.ObjectDetectionMetrics) */ {
 public:
  ObjectDetectionMetrics();
  virtual ~ObjectDetectionMetrics();

  ObjectDetectionMetrics(const ObjectDetectionMetrics& from);
  ObjectDetectionMetrics(ObjectDetectionMetrics&& from) noexcept
    : ObjectDetectionMetrics() {
    *this = ::std::move(from);
  }

  inline ObjectDetectionMetrics& operator=(const ObjectDetectionMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionMetrics& operator=(ObjectDetectionMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDetectionMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDetectionMetrics* internal_default_instance() {
    return reinterpret_cast<const ObjectDetectionMetrics*>(
               &_ObjectDetectionMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(ObjectDetectionMetrics& a, ObjectDetectionMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetectionMetrics* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDetectionMetrics* New() const final {
    return CreateMaybeMessage<ObjectDetectionMetrics>(nullptr);
  }

  ObjectDetectionMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDetectionMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDetectionMetrics& from);
  void MergeFrom(const ObjectDetectionMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetectionMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.evaluation.ObjectDetectionMetrics";
  }
  protected:
  explicit ObjectDetectionMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto);
    return ::descriptor_table_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPreProcessingLatencyFieldNumber = 1,
    kInferenceLatencyFieldNumber = 2,
    kInferenceMetricsFieldNumber = 3,
    kAveragePrecisionMetricsFieldNumber = 4,
  };
  // optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
  bool has_pre_processing_latency() const;
  void clear_pre_processing_latency();
  const ::tflite::evaluation::LatencyMetrics& pre_processing_latency() const;
  ::tflite::evaluation::LatencyMetrics* release_pre_processing_latency();
  ::tflite::evaluation::LatencyMetrics* mutable_pre_processing_latency();
  void set_allocated_pre_processing_latency(::tflite::evaluation::LatencyMetrics* pre_processing_latency);
  void unsafe_arena_set_allocated_pre_processing_latency(
      ::tflite::evaluation::LatencyMetrics* pre_processing_latency);
  ::tflite::evaluation::LatencyMetrics* unsafe_arena_release_pre_processing_latency();

  // optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
  bool has_inference_latency() const;
  void clear_inference_latency();
  const ::tflite::evaluation::LatencyMetrics& inference_latency() const;
  ::tflite::evaluation::LatencyMetrics* release_inference_latency();
  ::tflite::evaluation::LatencyMetrics* mutable_inference_latency();
  void set_allocated_inference_latency(::tflite::evaluation::LatencyMetrics* inference_latency);
  void unsafe_arena_set_allocated_inference_latency(
      ::tflite::evaluation::LatencyMetrics* inference_latency);
  ::tflite::evaluation::LatencyMetrics* unsafe_arena_release_inference_latency();

  // optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
  bool has_inference_metrics() const;
  void clear_inference_metrics();
  const ::tflite::evaluation::TfliteInferenceMetrics& inference_metrics() const;
  ::tflite::evaluation::TfliteInferenceMetrics* release_inference_metrics();
  ::tflite::evaluation::TfliteInferenceMetrics* mutable_inference_metrics();
  void set_allocated_inference_metrics(::tflite::evaluation::TfliteInferenceMetrics* inference_metrics);
  void unsafe_arena_set_allocated_inference_metrics(
      ::tflite::evaluation::TfliteInferenceMetrics* inference_metrics);
  ::tflite::evaluation::TfliteInferenceMetrics* unsafe_arena_release_inference_metrics();

  // optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics average_precision_metrics = 4;
  bool has_average_precision_metrics() const;
  void clear_average_precision_metrics();
  const ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics& average_precision_metrics() const;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* release_average_precision_metrics();
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* mutable_average_precision_metrics();
  void set_allocated_average_precision_metrics(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* average_precision_metrics);
  void unsafe_arena_set_allocated_average_precision_metrics(
      ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* average_precision_metrics);
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* unsafe_arena_release_average_precision_metrics();

  // @@protoc_insertion_point(class_scope:tflite.evaluation.ObjectDetectionMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::tflite::evaluation::LatencyMetrics* pre_processing_latency_;
  ::tflite::evaluation::LatencyMetrics* inference_latency_;
  ::tflite::evaluation::TfliteInferenceMetrics* inference_metrics_;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* average_precision_metrics_;
  friend struct ::TableStruct_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProcessSpecification

// optional .tflite.evaluation.ImagePreprocessingParams image_preprocessing_params = 1;
inline bool ProcessSpecification::has_image_preprocessing_params() const {
  return params_case() == kImagePreprocessingParams;
}
inline void ProcessSpecification::set_has_image_preprocessing_params() {
  _oneof_case_[0] = kImagePreprocessingParams;
}
inline void ProcessSpecification::clear_image_preprocessing_params() {
  if (has_image_preprocessing_params()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete params_.image_preprocessing_params_;
    }
    clear_has_params();
  }
}
inline ::tflite::evaluation::ImagePreprocessingParams* ProcessSpecification::release_image_preprocessing_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessSpecification.image_preprocessing_params)
  if (has_image_preprocessing_params()) {
    clear_has_params();
      ::tflite::evaluation::ImagePreprocessingParams* temp = params_.image_preprocessing_params_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    params_.image_preprocessing_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::ImagePreprocessingParams& ProcessSpecification::image_preprocessing_params() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessSpecification.image_preprocessing_params)
  return has_image_preprocessing_params()
      ? *params_.image_preprocessing_params_
      : *reinterpret_cast< ::tflite::evaluation::ImagePreprocessingParams*>(&::tflite::evaluation::_ImagePreprocessingParams_default_instance_);
}
inline ::tflite::evaluation::ImagePreprocessingParams* ProcessSpecification::unsafe_arena_release_image_preprocessing_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessSpecification.image_preprocessing_params)
  if (has_image_preprocessing_params()) {
    clear_has_params();
    ::tflite::evaluation::ImagePreprocessingParams* temp = params_.image_preprocessing_params_;
    params_.image_preprocessing_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessSpecification::unsafe_arena_set_allocated_image_preprocessing_params(::tflite::evaluation::ImagePreprocessingParams* image_preprocessing_params) {
  clear_params();
  if (image_preprocessing_params) {
    set_has_image_preprocessing_params();
    params_.image_preprocessing_params_ = image_preprocessing_params;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessSpecification.image_preprocessing_params)
}
inline ::tflite::evaluation::ImagePreprocessingParams* ProcessSpecification::mutable_image_preprocessing_params() {
  if (!has_image_preprocessing_params()) {
    clear_params();
    set_has_image_preprocessing_params();
    params_.image_preprocessing_params_ = CreateMaybeMessage< ::tflite::evaluation::ImagePreprocessingParams >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessSpecification.image_preprocessing_params)
  return params_.image_preprocessing_params_;
}

// optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
inline bool ProcessSpecification::has_topk_accuracy_eval_params() const {
  return params_case() == kTopkAccuracyEvalParams;
}
inline void ProcessSpecification::set_has_topk_accuracy_eval_params() {
  _oneof_case_[0] = kTopkAccuracyEvalParams;
}
inline void ProcessSpecification::clear_topk_accuracy_eval_params() {
  if (has_topk_accuracy_eval_params()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete params_.topk_accuracy_eval_params_;
    }
    clear_has_params();
  }
}
inline ::tflite::evaluation::TopkAccuracyEvalParams* ProcessSpecification::release_topk_accuracy_eval_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessSpecification.topk_accuracy_eval_params)
  if (has_topk_accuracy_eval_params()) {
    clear_has_params();
      ::tflite::evaluation::TopkAccuracyEvalParams* temp = params_.topk_accuracy_eval_params_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    params_.topk_accuracy_eval_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::TopkAccuracyEvalParams& ProcessSpecification::topk_accuracy_eval_params() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessSpecification.topk_accuracy_eval_params)
  return has_topk_accuracy_eval_params()
      ? *params_.topk_accuracy_eval_params_
      : *reinterpret_cast< ::tflite::evaluation::TopkAccuracyEvalParams*>(&::tflite::evaluation::_TopkAccuracyEvalParams_default_instance_);
}
inline ::tflite::evaluation::TopkAccuracyEvalParams* ProcessSpecification::unsafe_arena_release_topk_accuracy_eval_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessSpecification.topk_accuracy_eval_params)
  if (has_topk_accuracy_eval_params()) {
    clear_has_params();
    ::tflite::evaluation::TopkAccuracyEvalParams* temp = params_.topk_accuracy_eval_params_;
    params_.topk_accuracy_eval_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessSpecification::unsafe_arena_set_allocated_topk_accuracy_eval_params(::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params) {
  clear_params();
  if (topk_accuracy_eval_params) {
    set_has_topk_accuracy_eval_params();
    params_.topk_accuracy_eval_params_ = topk_accuracy_eval_params;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessSpecification.topk_accuracy_eval_params)
}
inline ::tflite::evaluation::TopkAccuracyEvalParams* ProcessSpecification::mutable_topk_accuracy_eval_params() {
  if (!has_topk_accuracy_eval_params()) {
    clear_params();
    set_has_topk_accuracy_eval_params();
    params_.topk_accuracy_eval_params_ = CreateMaybeMessage< ::tflite::evaluation::TopkAccuracyEvalParams >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessSpecification.topk_accuracy_eval_params)
  return params_.topk_accuracy_eval_params_;
}

// optional .tflite.evaluation.TfliteInferenceParams tflite_inference_params = 3;
inline bool ProcessSpecification::has_tflite_inference_params() const {
  return params_case() == kTfliteInferenceParams;
}
inline void ProcessSpecification::set_has_tflite_inference_params() {
  _oneof_case_[0] = kTfliteInferenceParams;
}
inline void ProcessSpecification::clear_tflite_inference_params() {
  if (has_tflite_inference_params()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete params_.tflite_inference_params_;
    }
    clear_has_params();
  }
}
inline ::tflite::evaluation::TfliteInferenceParams* ProcessSpecification::release_tflite_inference_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessSpecification.tflite_inference_params)
  if (has_tflite_inference_params()) {
    clear_has_params();
      ::tflite::evaluation::TfliteInferenceParams* temp = params_.tflite_inference_params_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    params_.tflite_inference_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::TfliteInferenceParams& ProcessSpecification::tflite_inference_params() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessSpecification.tflite_inference_params)
  return has_tflite_inference_params()
      ? *params_.tflite_inference_params_
      : *reinterpret_cast< ::tflite::evaluation::TfliteInferenceParams*>(&::tflite::evaluation::_TfliteInferenceParams_default_instance_);
}
inline ::tflite::evaluation::TfliteInferenceParams* ProcessSpecification::unsafe_arena_release_tflite_inference_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessSpecification.tflite_inference_params)
  if (has_tflite_inference_params()) {
    clear_has_params();
    ::tflite::evaluation::TfliteInferenceParams* temp = params_.tflite_inference_params_;
    params_.tflite_inference_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessSpecification::unsafe_arena_set_allocated_tflite_inference_params(::tflite::evaluation::TfliteInferenceParams* tflite_inference_params) {
  clear_params();
  if (tflite_inference_params) {
    set_has_tflite_inference_params();
    params_.tflite_inference_params_ = tflite_inference_params;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessSpecification.tflite_inference_params)
}
inline ::tflite::evaluation::TfliteInferenceParams* ProcessSpecification::mutable_tflite_inference_params() {
  if (!has_tflite_inference_params()) {
    clear_params();
    set_has_tflite_inference_params();
    params_.tflite_inference_params_ = CreateMaybeMessage< ::tflite::evaluation::TfliteInferenceParams >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessSpecification.tflite_inference_params)
  return params_.tflite_inference_params_;
}

// optional .tflite.evaluation.ImageClassificationParams image_classification_params = 4;
inline bool ProcessSpecification::has_image_classification_params() const {
  return params_case() == kImageClassificationParams;
}
inline void ProcessSpecification::set_has_image_classification_params() {
  _oneof_case_[0] = kImageClassificationParams;
}
inline void ProcessSpecification::clear_image_classification_params() {
  if (has_image_classification_params()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete params_.image_classification_params_;
    }
    clear_has_params();
  }
}
inline ::tflite::evaluation::ImageClassificationParams* ProcessSpecification::release_image_classification_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessSpecification.image_classification_params)
  if (has_image_classification_params()) {
    clear_has_params();
      ::tflite::evaluation::ImageClassificationParams* temp = params_.image_classification_params_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    params_.image_classification_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::ImageClassificationParams& ProcessSpecification::image_classification_params() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessSpecification.image_classification_params)
  return has_image_classification_params()
      ? *params_.image_classification_params_
      : *reinterpret_cast< ::tflite::evaluation::ImageClassificationParams*>(&::tflite::evaluation::_ImageClassificationParams_default_instance_);
}
inline ::tflite::evaluation::ImageClassificationParams* ProcessSpecification::unsafe_arena_release_image_classification_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessSpecification.image_classification_params)
  if (has_image_classification_params()) {
    clear_has_params();
    ::tflite::evaluation::ImageClassificationParams* temp = params_.image_classification_params_;
    params_.image_classification_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessSpecification::unsafe_arena_set_allocated_image_classification_params(::tflite::evaluation::ImageClassificationParams* image_classification_params) {
  clear_params();
  if (image_classification_params) {
    set_has_image_classification_params();
    params_.image_classification_params_ = image_classification_params;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessSpecification.image_classification_params)
}
inline ::tflite::evaluation::ImageClassificationParams* ProcessSpecification::mutable_image_classification_params() {
  if (!has_image_classification_params()) {
    clear_params();
    set_has_image_classification_params();
    params_.image_classification_params_ = CreateMaybeMessage< ::tflite::evaluation::ImageClassificationParams >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessSpecification.image_classification_params)
  return params_.image_classification_params_;
}

// optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams object_detection_average_precision_params = 5;
inline bool ProcessSpecification::has_object_detection_average_precision_params() const {
  return params_case() == kObjectDetectionAveragePrecisionParams;
}
inline void ProcessSpecification::set_has_object_detection_average_precision_params() {
  _oneof_case_[0] = kObjectDetectionAveragePrecisionParams;
}
inline void ProcessSpecification::clear_object_detection_average_precision_params() {
  if (has_object_detection_average_precision_params()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete params_.object_detection_average_precision_params_;
    }
    clear_has_params();
  }
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ProcessSpecification::release_object_detection_average_precision_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessSpecification.object_detection_average_precision_params)
  if (has_object_detection_average_precision_params()) {
    clear_has_params();
      ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* temp = params_.object_detection_average_precision_params_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    params_.object_detection_average_precision_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::ObjectDetectionAveragePrecisionParams& ProcessSpecification::object_detection_average_precision_params() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessSpecification.object_detection_average_precision_params)
  return has_object_detection_average_precision_params()
      ? *params_.object_detection_average_precision_params_
      : *reinterpret_cast< ::tflite::evaluation::ObjectDetectionAveragePrecisionParams*>(&::tflite::evaluation::_ObjectDetectionAveragePrecisionParams_default_instance_);
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ProcessSpecification::unsafe_arena_release_object_detection_average_precision_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessSpecification.object_detection_average_precision_params)
  if (has_object_detection_average_precision_params()) {
    clear_has_params();
    ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* temp = params_.object_detection_average_precision_params_;
    params_.object_detection_average_precision_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessSpecification::unsafe_arena_set_allocated_object_detection_average_precision_params(::tflite::evaluation::ObjectDetectionAveragePrecisionParams* object_detection_average_precision_params) {
  clear_params();
  if (object_detection_average_precision_params) {
    set_has_object_detection_average_precision_params();
    params_.object_detection_average_precision_params_ = object_detection_average_precision_params;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessSpecification.object_detection_average_precision_params)
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ProcessSpecification::mutable_object_detection_average_precision_params() {
  if (!has_object_detection_average_precision_params()) {
    clear_params();
    set_has_object_detection_average_precision_params();
    params_.object_detection_average_precision_params_ = CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionAveragePrecisionParams >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessSpecification.object_detection_average_precision_params)
  return params_.object_detection_average_precision_params_;
}

// optional .tflite.evaluation.ObjectDetectionParams object_detection_params = 6;
inline bool ProcessSpecification::has_object_detection_params() const {
  return params_case() == kObjectDetectionParams;
}
inline void ProcessSpecification::set_has_object_detection_params() {
  _oneof_case_[0] = kObjectDetectionParams;
}
inline void ProcessSpecification::clear_object_detection_params() {
  if (has_object_detection_params()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete params_.object_detection_params_;
    }
    clear_has_params();
  }
}
inline ::tflite::evaluation::ObjectDetectionParams* ProcessSpecification::release_object_detection_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessSpecification.object_detection_params)
  if (has_object_detection_params()) {
    clear_has_params();
      ::tflite::evaluation::ObjectDetectionParams* temp = params_.object_detection_params_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    params_.object_detection_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::ObjectDetectionParams& ProcessSpecification::object_detection_params() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessSpecification.object_detection_params)
  return has_object_detection_params()
      ? *params_.object_detection_params_
      : *reinterpret_cast< ::tflite::evaluation::ObjectDetectionParams*>(&::tflite::evaluation::_ObjectDetectionParams_default_instance_);
}
inline ::tflite::evaluation::ObjectDetectionParams* ProcessSpecification::unsafe_arena_release_object_detection_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessSpecification.object_detection_params)
  if (has_object_detection_params()) {
    clear_has_params();
    ::tflite::evaluation::ObjectDetectionParams* temp = params_.object_detection_params_;
    params_.object_detection_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessSpecification::unsafe_arena_set_allocated_object_detection_params(::tflite::evaluation::ObjectDetectionParams* object_detection_params) {
  clear_params();
  if (object_detection_params) {
    set_has_object_detection_params();
    params_.object_detection_params_ = object_detection_params;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessSpecification.object_detection_params)
}
inline ::tflite::evaluation::ObjectDetectionParams* ProcessSpecification::mutable_object_detection_params() {
  if (!has_object_detection_params()) {
    clear_params();
    set_has_object_detection_params();
    params_.object_detection_params_ = CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionParams >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessSpecification.object_detection_params)
  return params_.object_detection_params_;
}

inline bool ProcessSpecification::has_params() const {
  return params_case() != PARAMS_NOT_SET;
}
inline void ProcessSpecification::clear_has_params() {
  _oneof_case_[0] = PARAMS_NOT_SET;
}
inline ProcessSpecification::ParamsCase ProcessSpecification::params_case() const {
  return ProcessSpecification::ParamsCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// LatencyMetrics

// optional int64 last_us = 1;
inline bool LatencyMetrics::has_last_us() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LatencyMetrics::clear_last_us() {
  last_us_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LatencyMetrics::last_us() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.LatencyMetrics.last_us)
  return last_us_;
}
inline void LatencyMetrics::set_last_us(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  last_us_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.LatencyMetrics.last_us)
}

// optional int64 max_us = 2;
inline bool LatencyMetrics::has_max_us() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LatencyMetrics::clear_max_us() {
  max_us_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LatencyMetrics::max_us() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.LatencyMetrics.max_us)
  return max_us_;
}
inline void LatencyMetrics::set_max_us(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  max_us_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.LatencyMetrics.max_us)
}

// optional int64 min_us = 3;
inline bool LatencyMetrics::has_min_us() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LatencyMetrics::clear_min_us() {
  min_us_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LatencyMetrics::min_us() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.LatencyMetrics.min_us)
  return min_us_;
}
inline void LatencyMetrics::set_min_us(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  min_us_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.LatencyMetrics.min_us)
}

// optional int64 sum_us = 4;
inline bool LatencyMetrics::has_sum_us() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LatencyMetrics::clear_sum_us() {
  sum_us_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LatencyMetrics::sum_us() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.LatencyMetrics.sum_us)
  return sum_us_;
}
inline void LatencyMetrics::set_sum_us(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  sum_us_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.LatencyMetrics.sum_us)
}

// optional double avg_us = 5;
inline bool LatencyMetrics::has_avg_us() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LatencyMetrics::clear_avg_us() {
  avg_us_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline double LatencyMetrics::avg_us() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.LatencyMetrics.avg_us)
  return avg_us_;
}
inline void LatencyMetrics::set_avg_us(double value) {
  _has_bits_[0] |= 0x00000010u;
  avg_us_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.LatencyMetrics.avg_us)
}

// optional int64 std_deviation_us = 6;
inline bool LatencyMetrics::has_std_deviation_us() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LatencyMetrics::clear_std_deviation_us() {
  std_deviation_us_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LatencyMetrics::std_deviation_us() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.LatencyMetrics.std_deviation_us)
  return std_deviation_us_;
}
inline void LatencyMetrics::set_std_deviation_us(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  std_deviation_us_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.LatencyMetrics.std_deviation_us)
}

// -------------------------------------------------------------------

// AccuracyMetrics

// optional float max_value = 1;
inline bool AccuracyMetrics::has_max_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccuracyMetrics::clear_max_value() {
  max_value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float AccuracyMetrics::max_value() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.AccuracyMetrics.max_value)
  return max_value_;
}
inline void AccuracyMetrics::set_max_value(float value) {
  _has_bits_[0] |= 0x00000001u;
  max_value_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.AccuracyMetrics.max_value)
}

// optional float min_value = 2;
inline bool AccuracyMetrics::has_min_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccuracyMetrics::clear_min_value() {
  min_value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float AccuracyMetrics::min_value() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.AccuracyMetrics.min_value)
  return min_value_;
}
inline void AccuracyMetrics::set_min_value(float value) {
  _has_bits_[0] |= 0x00000002u;
  min_value_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.AccuracyMetrics.min_value)
}

// optional double avg_value = 3;
inline bool AccuracyMetrics::has_avg_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccuracyMetrics::clear_avg_value() {
  avg_value_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline double AccuracyMetrics::avg_value() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.AccuracyMetrics.avg_value)
  return avg_value_;
}
inline void AccuracyMetrics::set_avg_value(double value) {
  _has_bits_[0] |= 0x00000004u;
  avg_value_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.AccuracyMetrics.avg_value)
}

// optional float std_deviation = 4;
inline bool AccuracyMetrics::has_std_deviation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccuracyMetrics::clear_std_deviation() {
  std_deviation_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float AccuracyMetrics::std_deviation() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.AccuracyMetrics.std_deviation)
  return std_deviation_;
}
inline void AccuracyMetrics::set_std_deviation(float value) {
  _has_bits_[0] |= 0x00000008u;
  std_deviation_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.AccuracyMetrics.std_deviation)
}

// -------------------------------------------------------------------

// ProcessMetrics

// optional .tflite.evaluation.LatencyMetrics total_latency = 1;
inline bool ProcessMetrics::has_total_latency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessMetrics::clear_total_latency() {
  if (total_latency_ != nullptr) total_latency_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::tflite::evaluation::LatencyMetrics& ProcessMetrics::total_latency() const {
  const ::tflite::evaluation::LatencyMetrics* p = total_latency_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessMetrics.total_latency)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::LatencyMetrics*>(
      &::tflite::evaluation::_LatencyMetrics_default_instance_);
}
inline ::tflite::evaluation::LatencyMetrics* ProcessMetrics::release_total_latency() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessMetrics.total_latency)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::LatencyMetrics* temp = total_latency_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  total_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ProcessMetrics::unsafe_arena_release_total_latency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessMetrics.total_latency)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::LatencyMetrics* temp = total_latency_;
  total_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ProcessMetrics::mutable_total_latency() {
  _has_bits_[0] |= 0x00000001u;
  if (total_latency_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::LatencyMetrics>(GetArenaNoVirtual());
    total_latency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessMetrics.total_latency)
  return total_latency_;
}
inline void ProcessMetrics::set_allocated_total_latency(::tflite::evaluation::LatencyMetrics* total_latency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete total_latency_;
  }
  if (total_latency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(total_latency);
    if (message_arena != submessage_arena) {
      total_latency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, total_latency, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  total_latency_ = total_latency;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ProcessMetrics.total_latency)
}

// optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 2;
inline bool ProcessMetrics::has_topk_accuracy_metrics() const {
  return stage_metrics_case() == kTopkAccuracyMetrics;
}
inline void ProcessMetrics::set_has_topk_accuracy_metrics() {
  _oneof_case_[0] = kTopkAccuracyMetrics;
}
inline void ProcessMetrics::clear_topk_accuracy_metrics() {
  if (has_topk_accuracy_metrics()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete stage_metrics_.topk_accuracy_metrics_;
    }
    clear_has_stage_metrics();
  }
}
inline ::tflite::evaluation::TopkAccuracyEvalMetrics* ProcessMetrics::release_topk_accuracy_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessMetrics.topk_accuracy_metrics)
  if (has_topk_accuracy_metrics()) {
    clear_has_stage_metrics();
      ::tflite::evaluation::TopkAccuracyEvalMetrics* temp = stage_metrics_.topk_accuracy_metrics_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    stage_metrics_.topk_accuracy_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::TopkAccuracyEvalMetrics& ProcessMetrics::topk_accuracy_metrics() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessMetrics.topk_accuracy_metrics)
  return has_topk_accuracy_metrics()
      ? *stage_metrics_.topk_accuracy_metrics_
      : *reinterpret_cast< ::tflite::evaluation::TopkAccuracyEvalMetrics*>(&::tflite::evaluation::_TopkAccuracyEvalMetrics_default_instance_);
}
inline ::tflite::evaluation::TopkAccuracyEvalMetrics* ProcessMetrics::unsafe_arena_release_topk_accuracy_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessMetrics.topk_accuracy_metrics)
  if (has_topk_accuracy_metrics()) {
    clear_has_stage_metrics();
    ::tflite::evaluation::TopkAccuracyEvalMetrics* temp = stage_metrics_.topk_accuracy_metrics_;
    stage_metrics_.topk_accuracy_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessMetrics::unsafe_arena_set_allocated_topk_accuracy_metrics(::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics) {
  clear_stage_metrics();
  if (topk_accuracy_metrics) {
    set_has_topk_accuracy_metrics();
    stage_metrics_.topk_accuracy_metrics_ = topk_accuracy_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessMetrics.topk_accuracy_metrics)
}
inline ::tflite::evaluation::TopkAccuracyEvalMetrics* ProcessMetrics::mutable_topk_accuracy_metrics() {
  if (!has_topk_accuracy_metrics()) {
    clear_stage_metrics();
    set_has_topk_accuracy_metrics();
    stage_metrics_.topk_accuracy_metrics_ = CreateMaybeMessage< ::tflite::evaluation::TopkAccuracyEvalMetrics >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessMetrics.topk_accuracy_metrics)
  return stage_metrics_.topk_accuracy_metrics_;
}

// optional .tflite.evaluation.TfliteInferenceMetrics tflite_inference_metrics = 3;
inline bool ProcessMetrics::has_tflite_inference_metrics() const {
  return stage_metrics_case() == kTfliteInferenceMetrics;
}
inline void ProcessMetrics::set_has_tflite_inference_metrics() {
  _oneof_case_[0] = kTfliteInferenceMetrics;
}
inline void ProcessMetrics::clear_tflite_inference_metrics() {
  if (has_tflite_inference_metrics()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete stage_metrics_.tflite_inference_metrics_;
    }
    clear_has_stage_metrics();
  }
}
inline ::tflite::evaluation::TfliteInferenceMetrics* ProcessMetrics::release_tflite_inference_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessMetrics.tflite_inference_metrics)
  if (has_tflite_inference_metrics()) {
    clear_has_stage_metrics();
      ::tflite::evaluation::TfliteInferenceMetrics* temp = stage_metrics_.tflite_inference_metrics_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    stage_metrics_.tflite_inference_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::TfliteInferenceMetrics& ProcessMetrics::tflite_inference_metrics() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessMetrics.tflite_inference_metrics)
  return has_tflite_inference_metrics()
      ? *stage_metrics_.tflite_inference_metrics_
      : *reinterpret_cast< ::tflite::evaluation::TfliteInferenceMetrics*>(&::tflite::evaluation::_TfliteInferenceMetrics_default_instance_);
}
inline ::tflite::evaluation::TfliteInferenceMetrics* ProcessMetrics::unsafe_arena_release_tflite_inference_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessMetrics.tflite_inference_metrics)
  if (has_tflite_inference_metrics()) {
    clear_has_stage_metrics();
    ::tflite::evaluation::TfliteInferenceMetrics* temp = stage_metrics_.tflite_inference_metrics_;
    stage_metrics_.tflite_inference_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessMetrics::unsafe_arena_set_allocated_tflite_inference_metrics(::tflite::evaluation::TfliteInferenceMetrics* tflite_inference_metrics) {
  clear_stage_metrics();
  if (tflite_inference_metrics) {
    set_has_tflite_inference_metrics();
    stage_metrics_.tflite_inference_metrics_ = tflite_inference_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessMetrics.tflite_inference_metrics)
}
inline ::tflite::evaluation::TfliteInferenceMetrics* ProcessMetrics::mutable_tflite_inference_metrics() {
  if (!has_tflite_inference_metrics()) {
    clear_stage_metrics();
    set_has_tflite_inference_metrics();
    stage_metrics_.tflite_inference_metrics_ = CreateMaybeMessage< ::tflite::evaluation::TfliteInferenceMetrics >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessMetrics.tflite_inference_metrics)
  return stage_metrics_.tflite_inference_metrics_;
}

// optional .tflite.evaluation.ImageClassificationMetrics image_classification_metrics = 4;
inline bool ProcessMetrics::has_image_classification_metrics() const {
  return stage_metrics_case() == kImageClassificationMetrics;
}
inline void ProcessMetrics::set_has_image_classification_metrics() {
  _oneof_case_[0] = kImageClassificationMetrics;
}
inline void ProcessMetrics::clear_image_classification_metrics() {
  if (has_image_classification_metrics()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete stage_metrics_.image_classification_metrics_;
    }
    clear_has_stage_metrics();
  }
}
inline ::tflite::evaluation::ImageClassificationMetrics* ProcessMetrics::release_image_classification_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessMetrics.image_classification_metrics)
  if (has_image_classification_metrics()) {
    clear_has_stage_metrics();
      ::tflite::evaluation::ImageClassificationMetrics* temp = stage_metrics_.image_classification_metrics_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    stage_metrics_.image_classification_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::ImageClassificationMetrics& ProcessMetrics::image_classification_metrics() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessMetrics.image_classification_metrics)
  return has_image_classification_metrics()
      ? *stage_metrics_.image_classification_metrics_
      : *reinterpret_cast< ::tflite::evaluation::ImageClassificationMetrics*>(&::tflite::evaluation::_ImageClassificationMetrics_default_instance_);
}
inline ::tflite::evaluation::ImageClassificationMetrics* ProcessMetrics::unsafe_arena_release_image_classification_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessMetrics.image_classification_metrics)
  if (has_image_classification_metrics()) {
    clear_has_stage_metrics();
    ::tflite::evaluation::ImageClassificationMetrics* temp = stage_metrics_.image_classification_metrics_;
    stage_metrics_.image_classification_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessMetrics::unsafe_arena_set_allocated_image_classification_metrics(::tflite::evaluation::ImageClassificationMetrics* image_classification_metrics) {
  clear_stage_metrics();
  if (image_classification_metrics) {
    set_has_image_classification_metrics();
    stage_metrics_.image_classification_metrics_ = image_classification_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessMetrics.image_classification_metrics)
}
inline ::tflite::evaluation::ImageClassificationMetrics* ProcessMetrics::mutable_image_classification_metrics() {
  if (!has_image_classification_metrics()) {
    clear_stage_metrics();
    set_has_image_classification_metrics();
    stage_metrics_.image_classification_metrics_ = CreateMaybeMessage< ::tflite::evaluation::ImageClassificationMetrics >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessMetrics.image_classification_metrics)
  return stage_metrics_.image_classification_metrics_;
}

// optional .tflite.evaluation.InferenceProfilerMetrics inference_profiler_metrics = 5;
inline bool ProcessMetrics::has_inference_profiler_metrics() const {
  return stage_metrics_case() == kInferenceProfilerMetrics;
}
inline void ProcessMetrics::set_has_inference_profiler_metrics() {
  _oneof_case_[0] = kInferenceProfilerMetrics;
}
inline void ProcessMetrics::clear_inference_profiler_metrics() {
  if (has_inference_profiler_metrics()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete stage_metrics_.inference_profiler_metrics_;
    }
    clear_has_stage_metrics();
  }
}
inline ::tflite::evaluation::InferenceProfilerMetrics* ProcessMetrics::release_inference_profiler_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessMetrics.inference_profiler_metrics)
  if (has_inference_profiler_metrics()) {
    clear_has_stage_metrics();
      ::tflite::evaluation::InferenceProfilerMetrics* temp = stage_metrics_.inference_profiler_metrics_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    stage_metrics_.inference_profiler_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::InferenceProfilerMetrics& ProcessMetrics::inference_profiler_metrics() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessMetrics.inference_profiler_metrics)
  return has_inference_profiler_metrics()
      ? *stage_metrics_.inference_profiler_metrics_
      : *reinterpret_cast< ::tflite::evaluation::InferenceProfilerMetrics*>(&::tflite::evaluation::_InferenceProfilerMetrics_default_instance_);
}
inline ::tflite::evaluation::InferenceProfilerMetrics* ProcessMetrics::unsafe_arena_release_inference_profiler_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessMetrics.inference_profiler_metrics)
  if (has_inference_profiler_metrics()) {
    clear_has_stage_metrics();
    ::tflite::evaluation::InferenceProfilerMetrics* temp = stage_metrics_.inference_profiler_metrics_;
    stage_metrics_.inference_profiler_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessMetrics::unsafe_arena_set_allocated_inference_profiler_metrics(::tflite::evaluation::InferenceProfilerMetrics* inference_profiler_metrics) {
  clear_stage_metrics();
  if (inference_profiler_metrics) {
    set_has_inference_profiler_metrics();
    stage_metrics_.inference_profiler_metrics_ = inference_profiler_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessMetrics.inference_profiler_metrics)
}
inline ::tflite::evaluation::InferenceProfilerMetrics* ProcessMetrics::mutable_inference_profiler_metrics() {
  if (!has_inference_profiler_metrics()) {
    clear_stage_metrics();
    set_has_inference_profiler_metrics();
    stage_metrics_.inference_profiler_metrics_ = CreateMaybeMessage< ::tflite::evaluation::InferenceProfilerMetrics >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessMetrics.inference_profiler_metrics)
  return stage_metrics_.inference_profiler_metrics_;
}

// optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics object_detection_average_precision_metrics = 6;
inline bool ProcessMetrics::has_object_detection_average_precision_metrics() const {
  return stage_metrics_case() == kObjectDetectionAveragePrecisionMetrics;
}
inline void ProcessMetrics::set_has_object_detection_average_precision_metrics() {
  _oneof_case_[0] = kObjectDetectionAveragePrecisionMetrics;
}
inline void ProcessMetrics::clear_object_detection_average_precision_metrics() {
  if (has_object_detection_average_precision_metrics()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete stage_metrics_.object_detection_average_precision_metrics_;
    }
    clear_has_stage_metrics();
  }
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* ProcessMetrics::release_object_detection_average_precision_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessMetrics.object_detection_average_precision_metrics)
  if (has_object_detection_average_precision_metrics()) {
    clear_has_stage_metrics();
      ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* temp = stage_metrics_.object_detection_average_precision_metrics_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    stage_metrics_.object_detection_average_precision_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics& ProcessMetrics::object_detection_average_precision_metrics() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessMetrics.object_detection_average_precision_metrics)
  return has_object_detection_average_precision_metrics()
      ? *stage_metrics_.object_detection_average_precision_metrics_
      : *reinterpret_cast< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics*>(&::tflite::evaluation::_ObjectDetectionAveragePrecisionMetrics_default_instance_);
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* ProcessMetrics::unsafe_arena_release_object_detection_average_precision_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessMetrics.object_detection_average_precision_metrics)
  if (has_object_detection_average_precision_metrics()) {
    clear_has_stage_metrics();
    ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* temp = stage_metrics_.object_detection_average_precision_metrics_;
    stage_metrics_.object_detection_average_precision_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessMetrics::unsafe_arena_set_allocated_object_detection_average_precision_metrics(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* object_detection_average_precision_metrics) {
  clear_stage_metrics();
  if (object_detection_average_precision_metrics) {
    set_has_object_detection_average_precision_metrics();
    stage_metrics_.object_detection_average_precision_metrics_ = object_detection_average_precision_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessMetrics.object_detection_average_precision_metrics)
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* ProcessMetrics::mutable_object_detection_average_precision_metrics() {
  if (!has_object_detection_average_precision_metrics()) {
    clear_stage_metrics();
    set_has_object_detection_average_precision_metrics();
    stage_metrics_.object_detection_average_precision_metrics_ = CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessMetrics.object_detection_average_precision_metrics)
  return stage_metrics_.object_detection_average_precision_metrics_;
}

// optional .tflite.evaluation.ObjectDetectionMetrics object_detection_metrics = 7;
inline bool ProcessMetrics::has_object_detection_metrics() const {
  return stage_metrics_case() == kObjectDetectionMetrics;
}
inline void ProcessMetrics::set_has_object_detection_metrics() {
  _oneof_case_[0] = kObjectDetectionMetrics;
}
inline void ProcessMetrics::clear_object_detection_metrics() {
  if (has_object_detection_metrics()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete stage_metrics_.object_detection_metrics_;
    }
    clear_has_stage_metrics();
  }
}
inline ::tflite::evaluation::ObjectDetectionMetrics* ProcessMetrics::release_object_detection_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ProcessMetrics.object_detection_metrics)
  if (has_object_detection_metrics()) {
    clear_has_stage_metrics();
      ::tflite::evaluation::ObjectDetectionMetrics* temp = stage_metrics_.object_detection_metrics_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    stage_metrics_.object_detection_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tflite::evaluation::ObjectDetectionMetrics& ProcessMetrics::object_detection_metrics() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ProcessMetrics.object_detection_metrics)
  return has_object_detection_metrics()
      ? *stage_metrics_.object_detection_metrics_
      : *reinterpret_cast< ::tflite::evaluation::ObjectDetectionMetrics*>(&::tflite::evaluation::_ObjectDetectionMetrics_default_instance_);
}
inline ::tflite::evaluation::ObjectDetectionMetrics* ProcessMetrics::unsafe_arena_release_object_detection_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ProcessMetrics.object_detection_metrics)
  if (has_object_detection_metrics()) {
    clear_has_stage_metrics();
    ::tflite::evaluation::ObjectDetectionMetrics* temp = stage_metrics_.object_detection_metrics_;
    stage_metrics_.object_detection_metrics_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProcessMetrics::unsafe_arena_set_allocated_object_detection_metrics(::tflite::evaluation::ObjectDetectionMetrics* object_detection_metrics) {
  clear_stage_metrics();
  if (object_detection_metrics) {
    set_has_object_detection_metrics();
    stage_metrics_.object_detection_metrics_ = object_detection_metrics;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ProcessMetrics.object_detection_metrics)
}
inline ::tflite::evaluation::ObjectDetectionMetrics* ProcessMetrics::mutable_object_detection_metrics() {
  if (!has_object_detection_metrics()) {
    clear_stage_metrics();
    set_has_object_detection_metrics();
    stage_metrics_.object_detection_metrics_ = CreateMaybeMessage< ::tflite::evaluation::ObjectDetectionMetrics >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ProcessMetrics.object_detection_metrics)
  return stage_metrics_.object_detection_metrics_;
}

inline bool ProcessMetrics::has_stage_metrics() const {
  return stage_metrics_case() != STAGE_METRICS_NOT_SET;
}
inline void ProcessMetrics::clear_has_stage_metrics() {
  _oneof_case_[0] = STAGE_METRICS_NOT_SET;
}
inline ProcessMetrics::StageMetricsCase ProcessMetrics::stage_metrics_case() const {
  return ProcessMetrics::StageMetricsCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ImagePreprocessingParams

// repeated .tflite.evaluation.ImagePreprocessingStepParams steps = 1;
inline int ImagePreprocessingParams::steps_size() const {
  return steps_.size();
}
inline ::tflite::evaluation::ImagePreprocessingStepParams* ImagePreprocessingParams::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ImagePreprocessingParams.steps)
  return steps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ImagePreprocessingStepParams >*
ImagePreprocessingParams::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:tflite.evaluation.ImagePreprocessingParams.steps)
  return &steps_;
}
inline const ::tflite::evaluation::ImagePreprocessingStepParams& ImagePreprocessingParams::steps(int index) const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ImagePreprocessingParams.steps)
  return steps_.Get(index);
}
inline ::tflite::evaluation::ImagePreprocessingStepParams* ImagePreprocessingParams::add_steps() {
  // @@protoc_insertion_point(field_add:tflite.evaluation.ImagePreprocessingParams.steps)
  return steps_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ImagePreprocessingStepParams >&
ImagePreprocessingParams::steps() const {
  // @@protoc_insertion_point(field_list:tflite.evaluation.ImagePreprocessingParams.steps)
  return steps_;
}

// required int32 output_type = 2;
inline bool ImagePreprocessingParams::has_output_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImagePreprocessingParams::clear_output_type() {
  output_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ImagePreprocessingParams::output_type() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ImagePreprocessingParams.output_type)
  return output_type_;
}
inline void ImagePreprocessingParams::set_output_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  output_type_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ImagePreprocessingParams.output_type)
}

// -------------------------------------------------------------------

// TfliteInferenceParams

// optional string model_file_path = 1;
inline bool TfliteInferenceParams::has_model_file_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TfliteInferenceParams::clear_model_file_path() {
  model_file_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TfliteInferenceParams::model_file_path() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.TfliteInferenceParams.model_file_path)
  return model_file_path_.Get();
}
inline void TfliteInferenceParams::set_model_file_path(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  model_file_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tflite.evaluation.TfliteInferenceParams.model_file_path)
}
inline void TfliteInferenceParams::set_model_file_path(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  model_file_path_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tflite.evaluation.TfliteInferenceParams.model_file_path)
}
inline void TfliteInferenceParams::set_model_file_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  model_file_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tflite.evaluation.TfliteInferenceParams.model_file_path)
}
inline void TfliteInferenceParams::set_model_file_path(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  model_file_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tflite.evaluation.TfliteInferenceParams.model_file_path)
}
inline std::string* TfliteInferenceParams::mutable_model_file_path() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.TfliteInferenceParams.model_file_path)
  return model_file_path_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline std::string* TfliteInferenceParams::release_model_file_path() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.TfliteInferenceParams.model_file_path)
  if (!has_model_file_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return model_file_path_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TfliteInferenceParams::set_allocated_model_file_path(std::string* model_file_path) {
  if (model_file_path != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  model_file_path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model_file_path,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.TfliteInferenceParams.model_file_path)
}
inline std::string* TfliteInferenceParams::unsafe_arena_release_model_file_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.TfliteInferenceParams.model_file_path)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return model_file_path_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TfliteInferenceParams::unsafe_arena_set_allocated_model_file_path(
    std::string* model_file_path) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (model_file_path != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  model_file_path_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      model_file_path, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.TfliteInferenceParams.model_file_path)
}

// optional .tflite.evaluation.TfliteInferenceParams.Delegate delegate = 2;
inline bool TfliteInferenceParams::has_delegate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TfliteInferenceParams::clear_delegate() {
  delegate_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::tflite::evaluation::TfliteInferenceParams_Delegate TfliteInferenceParams::delegate() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.TfliteInferenceParams.delegate)
  return static_cast< ::tflite::evaluation::TfliteInferenceParams_Delegate >(delegate_);
}
inline void TfliteInferenceParams::set_delegate(::tflite::evaluation::TfliteInferenceParams_Delegate value) {
  assert(::tflite::evaluation::TfliteInferenceParams_Delegate_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  delegate_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.TfliteInferenceParams.delegate)
}

// optional int32 num_threads = 3 [default = 1];
inline bool TfliteInferenceParams::has_num_threads() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TfliteInferenceParams::clear_num_threads() {
  num_threads_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TfliteInferenceParams::num_threads() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.TfliteInferenceParams.num_threads)
  return num_threads_;
}
inline void TfliteInferenceParams::set_num_threads(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_threads_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.TfliteInferenceParams.num_threads)
}

// optional int32 invocations_per_run = 4 [default = 1];
inline bool TfliteInferenceParams::has_invocations_per_run() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TfliteInferenceParams::clear_invocations_per_run() {
  invocations_per_run_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TfliteInferenceParams::invocations_per_run() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.TfliteInferenceParams.invocations_per_run)
  return invocations_per_run_;
}
inline void TfliteInferenceParams::set_invocations_per_run(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  invocations_per_run_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.TfliteInferenceParams.invocations_per_run)
}

// -------------------------------------------------------------------

// TfliteInferenceMetrics

// optional int32 num_inferences = 1;
inline bool TfliteInferenceMetrics::has_num_inferences() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TfliteInferenceMetrics::clear_num_inferences() {
  num_inferences_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TfliteInferenceMetrics::num_inferences() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.TfliteInferenceMetrics.num_inferences)
  return num_inferences_;
}
inline void TfliteInferenceMetrics::set_num_inferences(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  num_inferences_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.TfliteInferenceMetrics.num_inferences)
}

// -------------------------------------------------------------------

// TopkAccuracyEvalParams

// optional int32 k = 1;
inline bool TopkAccuracyEvalParams::has_k() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TopkAccuracyEvalParams::clear_k() {
  k_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TopkAccuracyEvalParams::k() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.TopkAccuracyEvalParams.k)
  return k_;
}
inline void TopkAccuracyEvalParams::set_k(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  k_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.TopkAccuracyEvalParams.k)
}

// -------------------------------------------------------------------

// TopkAccuracyEvalMetrics

// repeated float topk_accuracies = 1;
inline int TopkAccuracyEvalMetrics::topk_accuracies_size() const {
  return topk_accuracies_.size();
}
inline void TopkAccuracyEvalMetrics::clear_topk_accuracies() {
  topk_accuracies_.Clear();
}
inline float TopkAccuracyEvalMetrics::topk_accuracies(int index) const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.TopkAccuracyEvalMetrics.topk_accuracies)
  return topk_accuracies_.Get(index);
}
inline void TopkAccuracyEvalMetrics::set_topk_accuracies(int index, float value) {
  topk_accuracies_.Set(index, value);
  // @@protoc_insertion_point(field_set:tflite.evaluation.TopkAccuracyEvalMetrics.topk_accuracies)
}
inline void TopkAccuracyEvalMetrics::add_topk_accuracies(float value) {
  topk_accuracies_.Add(value);
  // @@protoc_insertion_point(field_add:tflite.evaluation.TopkAccuracyEvalMetrics.topk_accuracies)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TopkAccuracyEvalMetrics::topk_accuracies() const {
  // @@protoc_insertion_point(field_list:tflite.evaluation.TopkAccuracyEvalMetrics.topk_accuracies)
  return topk_accuracies_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TopkAccuracyEvalMetrics::mutable_topk_accuracies() {
  // @@protoc_insertion_point(field_mutable_list:tflite.evaluation.TopkAccuracyEvalMetrics.topk_accuracies)
  return &topk_accuracies_;
}

// -------------------------------------------------------------------

// ImageClassificationParams

// optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
inline bool ImageClassificationParams::has_inference_params() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageClassificationParams::clear_inference_params() {
  if (inference_params_ != nullptr) inference_params_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::tflite::evaluation::TfliteInferenceParams& ImageClassificationParams::inference_params() const {
  const ::tflite::evaluation::TfliteInferenceParams* p = inference_params_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ImageClassificationParams.inference_params)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::TfliteInferenceParams*>(
      &::tflite::evaluation::_TfliteInferenceParams_default_instance_);
}
inline ::tflite::evaluation::TfliteInferenceParams* ImageClassificationParams::release_inference_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ImageClassificationParams.inference_params)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::TfliteInferenceParams* temp = inference_params_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  inference_params_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TfliteInferenceParams* ImageClassificationParams::unsafe_arena_release_inference_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ImageClassificationParams.inference_params)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::TfliteInferenceParams* temp = inference_params_;
  inference_params_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TfliteInferenceParams* ImageClassificationParams::mutable_inference_params() {
  _has_bits_[0] |= 0x00000001u;
  if (inference_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::TfliteInferenceParams>(GetArenaNoVirtual());
    inference_params_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ImageClassificationParams.inference_params)
  return inference_params_;
}
inline void ImageClassificationParams::set_allocated_inference_params(::tflite::evaluation::TfliteInferenceParams* inference_params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete inference_params_;
  }
  if (inference_params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(inference_params);
    if (message_arena != submessage_arena) {
      inference_params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inference_params, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  inference_params_ = inference_params;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ImageClassificationParams.inference_params)
}

// optional .tflite.evaluation.TopkAccuracyEvalParams topk_accuracy_eval_params = 2;
inline bool ImageClassificationParams::has_topk_accuracy_eval_params() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageClassificationParams::clear_topk_accuracy_eval_params() {
  if (topk_accuracy_eval_params_ != nullptr) topk_accuracy_eval_params_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::tflite::evaluation::TopkAccuracyEvalParams& ImageClassificationParams::topk_accuracy_eval_params() const {
  const ::tflite::evaluation::TopkAccuracyEvalParams* p = topk_accuracy_eval_params_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ImageClassificationParams.topk_accuracy_eval_params)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::TopkAccuracyEvalParams*>(
      &::tflite::evaluation::_TopkAccuracyEvalParams_default_instance_);
}
inline ::tflite::evaluation::TopkAccuracyEvalParams* ImageClassificationParams::release_topk_accuracy_eval_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ImageClassificationParams.topk_accuracy_eval_params)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::TopkAccuracyEvalParams* temp = topk_accuracy_eval_params_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  topk_accuracy_eval_params_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TopkAccuracyEvalParams* ImageClassificationParams::unsafe_arena_release_topk_accuracy_eval_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ImageClassificationParams.topk_accuracy_eval_params)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::TopkAccuracyEvalParams* temp = topk_accuracy_eval_params_;
  topk_accuracy_eval_params_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TopkAccuracyEvalParams* ImageClassificationParams::mutable_topk_accuracy_eval_params() {
  _has_bits_[0] |= 0x00000002u;
  if (topk_accuracy_eval_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::TopkAccuracyEvalParams>(GetArenaNoVirtual());
    topk_accuracy_eval_params_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ImageClassificationParams.topk_accuracy_eval_params)
  return topk_accuracy_eval_params_;
}
inline void ImageClassificationParams::set_allocated_topk_accuracy_eval_params(::tflite::evaluation::TopkAccuracyEvalParams* topk_accuracy_eval_params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete topk_accuracy_eval_params_;
  }
  if (topk_accuracy_eval_params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(topk_accuracy_eval_params);
    if (message_arena != submessage_arena) {
      topk_accuracy_eval_params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, topk_accuracy_eval_params, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  topk_accuracy_eval_params_ = topk_accuracy_eval_params;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ImageClassificationParams.topk_accuracy_eval_params)
}

// -------------------------------------------------------------------

// ImageClassificationMetrics

// optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
inline bool ImageClassificationMetrics::has_pre_processing_latency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageClassificationMetrics::clear_pre_processing_latency() {
  if (pre_processing_latency_ != nullptr) pre_processing_latency_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::tflite::evaluation::LatencyMetrics& ImageClassificationMetrics::pre_processing_latency() const {
  const ::tflite::evaluation::LatencyMetrics* p = pre_processing_latency_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ImageClassificationMetrics.pre_processing_latency)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::LatencyMetrics*>(
      &::tflite::evaluation::_LatencyMetrics_default_instance_);
}
inline ::tflite::evaluation::LatencyMetrics* ImageClassificationMetrics::release_pre_processing_latency() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ImageClassificationMetrics.pre_processing_latency)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::LatencyMetrics* temp = pre_processing_latency_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  pre_processing_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ImageClassificationMetrics::unsafe_arena_release_pre_processing_latency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ImageClassificationMetrics.pre_processing_latency)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::LatencyMetrics* temp = pre_processing_latency_;
  pre_processing_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ImageClassificationMetrics::mutable_pre_processing_latency() {
  _has_bits_[0] |= 0x00000001u;
  if (pre_processing_latency_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::LatencyMetrics>(GetArenaNoVirtual());
    pre_processing_latency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ImageClassificationMetrics.pre_processing_latency)
  return pre_processing_latency_;
}
inline void ImageClassificationMetrics::set_allocated_pre_processing_latency(::tflite::evaluation::LatencyMetrics* pre_processing_latency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pre_processing_latency_;
  }
  if (pre_processing_latency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(pre_processing_latency);
    if (message_arena != submessage_arena) {
      pre_processing_latency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pre_processing_latency, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pre_processing_latency_ = pre_processing_latency;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ImageClassificationMetrics.pre_processing_latency)
}

// optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
inline bool ImageClassificationMetrics::has_inference_latency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageClassificationMetrics::clear_inference_latency() {
  if (inference_latency_ != nullptr) inference_latency_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::tflite::evaluation::LatencyMetrics& ImageClassificationMetrics::inference_latency() const {
  const ::tflite::evaluation::LatencyMetrics* p = inference_latency_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ImageClassificationMetrics.inference_latency)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::LatencyMetrics*>(
      &::tflite::evaluation::_LatencyMetrics_default_instance_);
}
inline ::tflite::evaluation::LatencyMetrics* ImageClassificationMetrics::release_inference_latency() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ImageClassificationMetrics.inference_latency)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::LatencyMetrics* temp = inference_latency_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  inference_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ImageClassificationMetrics::unsafe_arena_release_inference_latency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ImageClassificationMetrics.inference_latency)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::LatencyMetrics* temp = inference_latency_;
  inference_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ImageClassificationMetrics::mutable_inference_latency() {
  _has_bits_[0] |= 0x00000002u;
  if (inference_latency_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::LatencyMetrics>(GetArenaNoVirtual());
    inference_latency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ImageClassificationMetrics.inference_latency)
  return inference_latency_;
}
inline void ImageClassificationMetrics::set_allocated_inference_latency(::tflite::evaluation::LatencyMetrics* inference_latency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete inference_latency_;
  }
  if (inference_latency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(inference_latency);
    if (message_arena != submessage_arena) {
      inference_latency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inference_latency, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  inference_latency_ = inference_latency;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ImageClassificationMetrics.inference_latency)
}

// optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
inline bool ImageClassificationMetrics::has_inference_metrics() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImageClassificationMetrics::clear_inference_metrics() {
  if (inference_metrics_ != nullptr) inference_metrics_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::tflite::evaluation::TfliteInferenceMetrics& ImageClassificationMetrics::inference_metrics() const {
  const ::tflite::evaluation::TfliteInferenceMetrics* p = inference_metrics_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ImageClassificationMetrics.inference_metrics)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::TfliteInferenceMetrics*>(
      &::tflite::evaluation::_TfliteInferenceMetrics_default_instance_);
}
inline ::tflite::evaluation::TfliteInferenceMetrics* ImageClassificationMetrics::release_inference_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ImageClassificationMetrics.inference_metrics)
  _has_bits_[0] &= ~0x00000004u;
  ::tflite::evaluation::TfliteInferenceMetrics* temp = inference_metrics_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  inference_metrics_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TfliteInferenceMetrics* ImageClassificationMetrics::unsafe_arena_release_inference_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ImageClassificationMetrics.inference_metrics)
  _has_bits_[0] &= ~0x00000004u;
  ::tflite::evaluation::TfliteInferenceMetrics* temp = inference_metrics_;
  inference_metrics_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TfliteInferenceMetrics* ImageClassificationMetrics::mutable_inference_metrics() {
  _has_bits_[0] |= 0x00000004u;
  if (inference_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::TfliteInferenceMetrics>(GetArenaNoVirtual());
    inference_metrics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ImageClassificationMetrics.inference_metrics)
  return inference_metrics_;
}
inline void ImageClassificationMetrics::set_allocated_inference_metrics(::tflite::evaluation::TfliteInferenceMetrics* inference_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete inference_metrics_;
  }
  if (inference_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(inference_metrics);
    if (message_arena != submessage_arena) {
      inference_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inference_metrics, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  inference_metrics_ = inference_metrics;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ImageClassificationMetrics.inference_metrics)
}

// optional .tflite.evaluation.TopkAccuracyEvalMetrics topk_accuracy_metrics = 4;
inline bool ImageClassificationMetrics::has_topk_accuracy_metrics() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ImageClassificationMetrics::clear_topk_accuracy_metrics() {
  if (topk_accuracy_metrics_ != nullptr) topk_accuracy_metrics_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::tflite::evaluation::TopkAccuracyEvalMetrics& ImageClassificationMetrics::topk_accuracy_metrics() const {
  const ::tflite::evaluation::TopkAccuracyEvalMetrics* p = topk_accuracy_metrics_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ImageClassificationMetrics.topk_accuracy_metrics)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::TopkAccuracyEvalMetrics*>(
      &::tflite::evaluation::_TopkAccuracyEvalMetrics_default_instance_);
}
inline ::tflite::evaluation::TopkAccuracyEvalMetrics* ImageClassificationMetrics::release_topk_accuracy_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ImageClassificationMetrics.topk_accuracy_metrics)
  _has_bits_[0] &= ~0x00000008u;
  ::tflite::evaluation::TopkAccuracyEvalMetrics* temp = topk_accuracy_metrics_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  topk_accuracy_metrics_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TopkAccuracyEvalMetrics* ImageClassificationMetrics::unsafe_arena_release_topk_accuracy_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ImageClassificationMetrics.topk_accuracy_metrics)
  _has_bits_[0] &= ~0x00000008u;
  ::tflite::evaluation::TopkAccuracyEvalMetrics* temp = topk_accuracy_metrics_;
  topk_accuracy_metrics_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TopkAccuracyEvalMetrics* ImageClassificationMetrics::mutable_topk_accuracy_metrics() {
  _has_bits_[0] |= 0x00000008u;
  if (topk_accuracy_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::TopkAccuracyEvalMetrics>(GetArenaNoVirtual());
    topk_accuracy_metrics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ImageClassificationMetrics.topk_accuracy_metrics)
  return topk_accuracy_metrics_;
}
inline void ImageClassificationMetrics::set_allocated_topk_accuracy_metrics(::tflite::evaluation::TopkAccuracyEvalMetrics* topk_accuracy_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete topk_accuracy_metrics_;
  }
  if (topk_accuracy_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(topk_accuracy_metrics);
    if (message_arena != submessage_arena) {
      topk_accuracy_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, topk_accuracy_metrics, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  topk_accuracy_metrics_ = topk_accuracy_metrics;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ImageClassificationMetrics.topk_accuracy_metrics)
}

// -------------------------------------------------------------------

// InferenceProfilerMetrics

// optional .tflite.evaluation.LatencyMetrics reference_latency = 1;
inline bool InferenceProfilerMetrics::has_reference_latency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InferenceProfilerMetrics::clear_reference_latency() {
  if (reference_latency_ != nullptr) reference_latency_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::tflite::evaluation::LatencyMetrics& InferenceProfilerMetrics::reference_latency() const {
  const ::tflite::evaluation::LatencyMetrics* p = reference_latency_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.InferenceProfilerMetrics.reference_latency)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::LatencyMetrics*>(
      &::tflite::evaluation::_LatencyMetrics_default_instance_);
}
inline ::tflite::evaluation::LatencyMetrics* InferenceProfilerMetrics::release_reference_latency() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.InferenceProfilerMetrics.reference_latency)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::LatencyMetrics* temp = reference_latency_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  reference_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* InferenceProfilerMetrics::unsafe_arena_release_reference_latency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.InferenceProfilerMetrics.reference_latency)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::LatencyMetrics* temp = reference_latency_;
  reference_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* InferenceProfilerMetrics::mutable_reference_latency() {
  _has_bits_[0] |= 0x00000001u;
  if (reference_latency_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::LatencyMetrics>(GetArenaNoVirtual());
    reference_latency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.InferenceProfilerMetrics.reference_latency)
  return reference_latency_;
}
inline void InferenceProfilerMetrics::set_allocated_reference_latency(::tflite::evaluation::LatencyMetrics* reference_latency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reference_latency_;
  }
  if (reference_latency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reference_latency);
    if (message_arena != submessage_arena) {
      reference_latency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reference_latency, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reference_latency_ = reference_latency;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.InferenceProfilerMetrics.reference_latency)
}

// optional .tflite.evaluation.LatencyMetrics test_latency = 2;
inline bool InferenceProfilerMetrics::has_test_latency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InferenceProfilerMetrics::clear_test_latency() {
  if (test_latency_ != nullptr) test_latency_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::tflite::evaluation::LatencyMetrics& InferenceProfilerMetrics::test_latency() const {
  const ::tflite::evaluation::LatencyMetrics* p = test_latency_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.InferenceProfilerMetrics.test_latency)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::LatencyMetrics*>(
      &::tflite::evaluation::_LatencyMetrics_default_instance_);
}
inline ::tflite::evaluation::LatencyMetrics* InferenceProfilerMetrics::release_test_latency() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.InferenceProfilerMetrics.test_latency)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::LatencyMetrics* temp = test_latency_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  test_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* InferenceProfilerMetrics::unsafe_arena_release_test_latency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.InferenceProfilerMetrics.test_latency)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::LatencyMetrics* temp = test_latency_;
  test_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* InferenceProfilerMetrics::mutable_test_latency() {
  _has_bits_[0] |= 0x00000002u;
  if (test_latency_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::LatencyMetrics>(GetArenaNoVirtual());
    test_latency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.InferenceProfilerMetrics.test_latency)
  return test_latency_;
}
inline void InferenceProfilerMetrics::set_allocated_test_latency(::tflite::evaluation::LatencyMetrics* test_latency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete test_latency_;
  }
  if (test_latency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(test_latency);
    if (message_arena != submessage_arena) {
      test_latency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, test_latency, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  test_latency_ = test_latency;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.InferenceProfilerMetrics.test_latency)
}

// repeated .tflite.evaluation.AccuracyMetrics output_errors = 3;
inline int InferenceProfilerMetrics::output_errors_size() const {
  return output_errors_.size();
}
inline void InferenceProfilerMetrics::clear_output_errors() {
  output_errors_.Clear();
}
inline ::tflite::evaluation::AccuracyMetrics* InferenceProfilerMetrics::mutable_output_errors(int index) {
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.InferenceProfilerMetrics.output_errors)
  return output_errors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::AccuracyMetrics >*
InferenceProfilerMetrics::mutable_output_errors() {
  // @@protoc_insertion_point(field_mutable_list:tflite.evaluation.InferenceProfilerMetrics.output_errors)
  return &output_errors_;
}
inline const ::tflite::evaluation::AccuracyMetrics& InferenceProfilerMetrics::output_errors(int index) const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.InferenceProfilerMetrics.output_errors)
  return output_errors_.Get(index);
}
inline ::tflite::evaluation::AccuracyMetrics* InferenceProfilerMetrics::add_output_errors() {
  // @@protoc_insertion_point(field_add:tflite.evaluation.InferenceProfilerMetrics.output_errors)
  return output_errors_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::AccuracyMetrics >&
InferenceProfilerMetrics::output_errors() const {
  // @@protoc_insertion_point(field_list:tflite.evaluation.InferenceProfilerMetrics.output_errors)
  return output_errors_;
}

// -------------------------------------------------------------------

// ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox

// optional float normalized_top = 1;
inline bool ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::has_normalized_top() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::clear_normalized_top() {
  normalized_top_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::normalized_top() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox.normalized_top)
  return normalized_top_;
}
inline void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::set_normalized_top(float value) {
  _has_bits_[0] |= 0x00000001u;
  normalized_top_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox.normalized_top)
}

// optional float normalized_bottom = 2;
inline bool ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::has_normalized_bottom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::clear_normalized_bottom() {
  normalized_bottom_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::normalized_bottom() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox.normalized_bottom)
  return normalized_bottom_;
}
inline void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::set_normalized_bottom(float value) {
  _has_bits_[0] |= 0x00000002u;
  normalized_bottom_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox.normalized_bottom)
}

// optional float normalized_left = 3;
inline bool ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::has_normalized_left() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::clear_normalized_left() {
  normalized_left_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::normalized_left() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox.normalized_left)
  return normalized_left_;
}
inline void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::set_normalized_left(float value) {
  _has_bits_[0] |= 0x00000004u;
  normalized_left_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox.normalized_left)
}

// optional float normalized_right = 4;
inline bool ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::has_normalized_right() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::clear_normalized_right() {
  normalized_right_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::normalized_right() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox.normalized_right)
  return normalized_right_;
}
inline void ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox::set_normalized_right(float value) {
  _has_bits_[0] |= 0x00000008u;
  normalized_right_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox.normalized_right)
}

// -------------------------------------------------------------------

// ObjectDetectionResult_ObjectInstance

// optional int32 class_id = 1;
inline bool ObjectDetectionResult_ObjectInstance::has_class_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectDetectionResult_ObjectInstance::clear_class_id() {
  class_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectDetectionResult_ObjectInstance::class_id() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.ObjectInstance.class_id)
  return class_id_;
}
inline void ObjectDetectionResult_ObjectInstance::set_class_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  class_id_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionResult.ObjectInstance.class_id)
}

// optional .tflite.evaluation.ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox bounding_box = 2;
inline bool ObjectDetectionResult_ObjectInstance::has_bounding_box() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectDetectionResult_ObjectInstance::clear_bounding_box() {
  if (bounding_box_ != nullptr) bounding_box_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox& ObjectDetectionResult_ObjectInstance::bounding_box() const {
  const ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* p = bounding_box_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.ObjectInstance.bounding_box)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox*>(
      &::tflite::evaluation::_ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox_default_instance_);
}
inline ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* ObjectDetectionResult_ObjectInstance::release_bounding_box() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ObjectDetectionResult.ObjectInstance.bounding_box)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* temp = bounding_box_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  bounding_box_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* ObjectDetectionResult_ObjectInstance::unsafe_arena_release_bounding_box() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ObjectDetectionResult.ObjectInstance.bounding_box)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* temp = bounding_box_;
  bounding_box_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* ObjectDetectionResult_ObjectInstance::mutable_bounding_box() {
  _has_bits_[0] |= 0x00000001u;
  if (bounding_box_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox>(GetArenaNoVirtual());
    bounding_box_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionResult.ObjectInstance.bounding_box)
  return bounding_box_;
}
inline void ObjectDetectionResult_ObjectInstance::set_allocated_bounding_box(::tflite::evaluation::ObjectDetectionResult_ObjectInstance_NormalizedBoundingBox* bounding_box) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bounding_box_;
  }
  if (bounding_box) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bounding_box);
    if (message_arena != submessage_arena) {
      bounding_box = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bounding_box, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  bounding_box_ = bounding_box;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ObjectDetectionResult.ObjectInstance.bounding_box)
}

// optional float score = 3 [default = 1];
inline bool ObjectDetectionResult_ObjectInstance::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectDetectionResult_ObjectInstance::clear_score() {
  score_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline float ObjectDetectionResult_ObjectInstance::score() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.ObjectInstance.score)
  return score_;
}
inline void ObjectDetectionResult_ObjectInstance::set_score(float value) {
  _has_bits_[0] |= 0x00000004u;
  score_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionResult.ObjectInstance.score)
}

// -------------------------------------------------------------------

// ObjectDetectionResult

// repeated .tflite.evaluation.ObjectDetectionResult.ObjectInstance objects = 1;
inline int ObjectDetectionResult::objects_size() const {
  return objects_.size();
}
inline void ObjectDetectionResult::clear_objects() {
  objects_.Clear();
}
inline ::tflite::evaluation::ObjectDetectionResult_ObjectInstance* ObjectDetectionResult::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionResult.objects)
  return objects_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance >*
ObjectDetectionResult::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:tflite.evaluation.ObjectDetectionResult.objects)
  return &objects_;
}
inline const ::tflite::evaluation::ObjectDetectionResult_ObjectInstance& ObjectDetectionResult::objects(int index) const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.objects)
  return objects_.Get(index);
}
inline ::tflite::evaluation::ObjectDetectionResult_ObjectInstance* ObjectDetectionResult::add_objects() {
  // @@protoc_insertion_point(field_add:tflite.evaluation.ObjectDetectionResult.objects)
  return objects_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult_ObjectInstance >&
ObjectDetectionResult::objects() const {
  // @@protoc_insertion_point(field_list:tflite.evaluation.ObjectDetectionResult.objects)
  return objects_;
}

// optional string image_name = 2;
inline bool ObjectDetectionResult::has_image_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectDetectionResult::clear_image_name() {
  image_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ObjectDetectionResult::image_name() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.image_name)
  return image_name_.Get();
}
inline void ObjectDetectionResult::set_image_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  image_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionResult.image_name)
}
inline void ObjectDetectionResult::set_image_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  image_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tflite.evaluation.ObjectDetectionResult.image_name)
}
inline void ObjectDetectionResult::set_image_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  image_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tflite.evaluation.ObjectDetectionResult.image_name)
}
inline void ObjectDetectionResult::set_image_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  image_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tflite.evaluation.ObjectDetectionResult.image_name)
}
inline std::string* ObjectDetectionResult::mutable_image_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionResult.image_name)
  return image_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline std::string* ObjectDetectionResult::release_image_name() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ObjectDetectionResult.image_name)
  if (!has_image_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return image_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ObjectDetectionResult::set_allocated_image_name(std::string* image_name) {
  if (image_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  image_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ObjectDetectionResult.image_name)
}
inline std::string* ObjectDetectionResult::unsafe_arena_release_image_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ObjectDetectionResult.image_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return image_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ObjectDetectionResult::unsafe_arena_set_allocated_image_name(
    std::string* image_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (image_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  image_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      image_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.evaluation.ObjectDetectionResult.image_name)
}

// optional int64 image_id = 3;
inline bool ObjectDetectionResult::has_image_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectDetectionResult::clear_image_id() {
  image_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ObjectDetectionResult::image_id() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionResult.image_id)
  return image_id_;
}
inline void ObjectDetectionResult::set_image_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  image_id_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionResult.image_id)
}

// -------------------------------------------------------------------

// ObjectDetectionGroundTruth

// repeated .tflite.evaluation.ObjectDetectionResult detection_results = 1;
inline int ObjectDetectionGroundTruth::detection_results_size() const {
  return detection_results_.size();
}
inline void ObjectDetectionGroundTruth::clear_detection_results() {
  detection_results_.Clear();
}
inline ::tflite::evaluation::ObjectDetectionResult* ObjectDetectionGroundTruth::mutable_detection_results(int index) {
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionGroundTruth.detection_results)
  return detection_results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult >*
ObjectDetectionGroundTruth::mutable_detection_results() {
  // @@protoc_insertion_point(field_mutable_list:tflite.evaluation.ObjectDetectionGroundTruth.detection_results)
  return &detection_results_;
}
inline const ::tflite::evaluation::ObjectDetectionResult& ObjectDetectionGroundTruth::detection_results(int index) const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionGroundTruth.detection_results)
  return detection_results_.Get(index);
}
inline ::tflite::evaluation::ObjectDetectionResult* ObjectDetectionGroundTruth::add_detection_results() {
  // @@protoc_insertion_point(field_add:tflite.evaluation.ObjectDetectionGroundTruth.detection_results)
  return detection_results_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionResult >&
ObjectDetectionGroundTruth::detection_results() const {
  // @@protoc_insertion_point(field_list:tflite.evaluation.ObjectDetectionGroundTruth.detection_results)
  return detection_results_;
}

// -------------------------------------------------------------------

// ObjectDetectionAveragePrecisionParams

// optional int32 num_classes = 1;
inline bool ObjectDetectionAveragePrecisionParams::has_num_classes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectDetectionAveragePrecisionParams::clear_num_classes() {
  num_classes_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectDetectionAveragePrecisionParams::num_classes() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionAveragePrecisionParams.num_classes)
  return num_classes_;
}
inline void ObjectDetectionAveragePrecisionParams::set_num_classes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  num_classes_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionAveragePrecisionParams.num_classes)
}

// repeated float iou_thresholds = 2;
inline int ObjectDetectionAveragePrecisionParams::iou_thresholds_size() const {
  return iou_thresholds_.size();
}
inline void ObjectDetectionAveragePrecisionParams::clear_iou_thresholds() {
  iou_thresholds_.Clear();
}
inline float ObjectDetectionAveragePrecisionParams::iou_thresholds(int index) const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionAveragePrecisionParams.iou_thresholds)
  return iou_thresholds_.Get(index);
}
inline void ObjectDetectionAveragePrecisionParams::set_iou_thresholds(int index, float value) {
  iou_thresholds_.Set(index, value);
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionAveragePrecisionParams.iou_thresholds)
}
inline void ObjectDetectionAveragePrecisionParams::add_iou_thresholds(float value) {
  iou_thresholds_.Add(value);
  // @@protoc_insertion_point(field_add:tflite.evaluation.ObjectDetectionAveragePrecisionParams.iou_thresholds)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ObjectDetectionAveragePrecisionParams::iou_thresholds() const {
  // @@protoc_insertion_point(field_list:tflite.evaluation.ObjectDetectionAveragePrecisionParams.iou_thresholds)
  return iou_thresholds_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ObjectDetectionAveragePrecisionParams::mutable_iou_thresholds() {
  // @@protoc_insertion_point(field_mutable_list:tflite.evaluation.ObjectDetectionAveragePrecisionParams.iou_thresholds)
  return &iou_thresholds_;
}

// optional int32 num_recall_points = 3 [default = 100];
inline bool ObjectDetectionAveragePrecisionParams::has_num_recall_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectDetectionAveragePrecisionParams::clear_num_recall_points() {
  num_recall_points_ = 100;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectDetectionAveragePrecisionParams::num_recall_points() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionAveragePrecisionParams.num_recall_points)
  return num_recall_points_;
}
inline void ObjectDetectionAveragePrecisionParams::set_num_recall_points(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_recall_points_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionAveragePrecisionParams.num_recall_points)
}

// -------------------------------------------------------------------

// ObjectDetectionAveragePrecisionMetrics_AveragePrecision

// optional float iou_threshold = 1;
inline bool ObjectDetectionAveragePrecisionMetrics_AveragePrecision::has_iou_threshold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::clear_iou_threshold() {
  iou_threshold_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ObjectDetectionAveragePrecisionMetrics_AveragePrecision::iou_threshold() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision.iou_threshold)
  return iou_threshold_;
}
inline void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::set_iou_threshold(float value) {
  _has_bits_[0] |= 0x00000001u;
  iou_threshold_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision.iou_threshold)
}

// optional float average_precision = 2;
inline bool ObjectDetectionAveragePrecisionMetrics_AveragePrecision::has_average_precision() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::clear_average_precision() {
  average_precision_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float ObjectDetectionAveragePrecisionMetrics_AveragePrecision::average_precision() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision.average_precision)
  return average_precision_;
}
inline void ObjectDetectionAveragePrecisionMetrics_AveragePrecision::set_average_precision(float value) {
  _has_bits_[0] |= 0x00000002u;
  average_precision_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision.average_precision)
}

// -------------------------------------------------------------------

// ObjectDetectionAveragePrecisionMetrics

// repeated .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.AveragePrecision individual_average_precisions = 1;
inline int ObjectDetectionAveragePrecisionMetrics::individual_average_precisions_size() const {
  return individual_average_precisions_.size();
}
inline void ObjectDetectionAveragePrecisionMetrics::clear_individual_average_precisions() {
  individual_average_precisions_.Clear();
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision* ObjectDetectionAveragePrecisionMetrics::mutable_individual_average_precisions(int index) {
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.individual_average_precisions)
  return individual_average_precisions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision >*
ObjectDetectionAveragePrecisionMetrics::mutable_individual_average_precisions() {
  // @@protoc_insertion_point(field_mutable_list:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.individual_average_precisions)
  return &individual_average_precisions_;
}
inline const ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision& ObjectDetectionAveragePrecisionMetrics::individual_average_precisions(int index) const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.individual_average_precisions)
  return individual_average_precisions_.Get(index);
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision* ObjectDetectionAveragePrecisionMetrics::add_individual_average_precisions() {
  // @@protoc_insertion_point(field_add:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.individual_average_precisions)
  return individual_average_precisions_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics_AveragePrecision >&
ObjectDetectionAveragePrecisionMetrics::individual_average_precisions() const {
  // @@protoc_insertion_point(field_list:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.individual_average_precisions)
  return individual_average_precisions_;
}

// optional float overall_mean_average_precision = 2;
inline bool ObjectDetectionAveragePrecisionMetrics::has_overall_mean_average_precision() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectDetectionAveragePrecisionMetrics::clear_overall_mean_average_precision() {
  overall_mean_average_precision_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ObjectDetectionAveragePrecisionMetrics::overall_mean_average_precision() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.overall_mean_average_precision)
  return overall_mean_average_precision_;
}
inline void ObjectDetectionAveragePrecisionMetrics::set_overall_mean_average_precision(float value) {
  _has_bits_[0] |= 0x00000001u;
  overall_mean_average_precision_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionAveragePrecisionMetrics.overall_mean_average_precision)
}

// -------------------------------------------------------------------

// ObjectDetectionParams

// optional .tflite.evaluation.TfliteInferenceParams inference_params = 1;
inline bool ObjectDetectionParams::has_inference_params() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectDetectionParams::clear_inference_params() {
  if (inference_params_ != nullptr) inference_params_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::tflite::evaluation::TfliteInferenceParams& ObjectDetectionParams::inference_params() const {
  const ::tflite::evaluation::TfliteInferenceParams* p = inference_params_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionParams.inference_params)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::TfliteInferenceParams*>(
      &::tflite::evaluation::_TfliteInferenceParams_default_instance_);
}
inline ::tflite::evaluation::TfliteInferenceParams* ObjectDetectionParams::release_inference_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ObjectDetectionParams.inference_params)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::TfliteInferenceParams* temp = inference_params_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  inference_params_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TfliteInferenceParams* ObjectDetectionParams::unsafe_arena_release_inference_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ObjectDetectionParams.inference_params)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::TfliteInferenceParams* temp = inference_params_;
  inference_params_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TfliteInferenceParams* ObjectDetectionParams::mutable_inference_params() {
  _has_bits_[0] |= 0x00000001u;
  if (inference_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::TfliteInferenceParams>(GetArenaNoVirtual());
    inference_params_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionParams.inference_params)
  return inference_params_;
}
inline void ObjectDetectionParams::set_allocated_inference_params(::tflite::evaluation::TfliteInferenceParams* inference_params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete inference_params_;
  }
  if (inference_params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(inference_params);
    if (message_arena != submessage_arena) {
      inference_params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inference_params, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  inference_params_ = inference_params;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ObjectDetectionParams.inference_params)
}

// optional int32 class_offset = 2 [default = 1];
inline bool ObjectDetectionParams::has_class_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectDetectionParams::clear_class_offset() {
  class_offset_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectDetectionParams::class_offset() const {
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionParams.class_offset)
  return class_offset_;
}
inline void ObjectDetectionParams::set_class_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  class_offset_ = value;
  // @@protoc_insertion_point(field_set:tflite.evaluation.ObjectDetectionParams.class_offset)
}

// optional .tflite.evaluation.ObjectDetectionAveragePrecisionParams ap_params = 3;
inline bool ObjectDetectionParams::has_ap_params() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectDetectionParams::clear_ap_params() {
  if (ap_params_ != nullptr) ap_params_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::tflite::evaluation::ObjectDetectionAveragePrecisionParams& ObjectDetectionParams::ap_params() const {
  const ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* p = ap_params_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionParams.ap_params)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::ObjectDetectionAveragePrecisionParams*>(
      &::tflite::evaluation::_ObjectDetectionAveragePrecisionParams_default_instance_);
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ObjectDetectionParams::release_ap_params() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ObjectDetectionParams.ap_params)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* temp = ap_params_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  ap_params_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ObjectDetectionParams::unsafe_arena_release_ap_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ObjectDetectionParams.ap_params)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* temp = ap_params_;
  ap_params_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ObjectDetectionParams::mutable_ap_params() {
  _has_bits_[0] |= 0x00000002u;
  if (ap_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::ObjectDetectionAveragePrecisionParams>(GetArenaNoVirtual());
    ap_params_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionParams.ap_params)
  return ap_params_;
}
inline void ObjectDetectionParams::set_allocated_ap_params(::tflite::evaluation::ObjectDetectionAveragePrecisionParams* ap_params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ap_params_;
  }
  if (ap_params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ap_params);
    if (message_arena != submessage_arena) {
      ap_params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ap_params, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ap_params_ = ap_params;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ObjectDetectionParams.ap_params)
}

// -------------------------------------------------------------------

// ObjectDetectionMetrics

// optional .tflite.evaluation.LatencyMetrics pre_processing_latency = 1;
inline bool ObjectDetectionMetrics::has_pre_processing_latency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectDetectionMetrics::clear_pre_processing_latency() {
  if (pre_processing_latency_ != nullptr) pre_processing_latency_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::tflite::evaluation::LatencyMetrics& ObjectDetectionMetrics::pre_processing_latency() const {
  const ::tflite::evaluation::LatencyMetrics* p = pre_processing_latency_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionMetrics.pre_processing_latency)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::LatencyMetrics*>(
      &::tflite::evaluation::_LatencyMetrics_default_instance_);
}
inline ::tflite::evaluation::LatencyMetrics* ObjectDetectionMetrics::release_pre_processing_latency() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ObjectDetectionMetrics.pre_processing_latency)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::LatencyMetrics* temp = pre_processing_latency_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  pre_processing_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ObjectDetectionMetrics::unsafe_arena_release_pre_processing_latency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ObjectDetectionMetrics.pre_processing_latency)
  _has_bits_[0] &= ~0x00000001u;
  ::tflite::evaluation::LatencyMetrics* temp = pre_processing_latency_;
  pre_processing_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ObjectDetectionMetrics::mutable_pre_processing_latency() {
  _has_bits_[0] |= 0x00000001u;
  if (pre_processing_latency_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::LatencyMetrics>(GetArenaNoVirtual());
    pre_processing_latency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionMetrics.pre_processing_latency)
  return pre_processing_latency_;
}
inline void ObjectDetectionMetrics::set_allocated_pre_processing_latency(::tflite::evaluation::LatencyMetrics* pre_processing_latency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pre_processing_latency_;
  }
  if (pre_processing_latency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(pre_processing_latency);
    if (message_arena != submessage_arena) {
      pre_processing_latency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pre_processing_latency, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pre_processing_latency_ = pre_processing_latency;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ObjectDetectionMetrics.pre_processing_latency)
}

// optional .tflite.evaluation.LatencyMetrics inference_latency = 2;
inline bool ObjectDetectionMetrics::has_inference_latency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectDetectionMetrics::clear_inference_latency() {
  if (inference_latency_ != nullptr) inference_latency_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::tflite::evaluation::LatencyMetrics& ObjectDetectionMetrics::inference_latency() const {
  const ::tflite::evaluation::LatencyMetrics* p = inference_latency_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionMetrics.inference_latency)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::LatencyMetrics*>(
      &::tflite::evaluation::_LatencyMetrics_default_instance_);
}
inline ::tflite::evaluation::LatencyMetrics* ObjectDetectionMetrics::release_inference_latency() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ObjectDetectionMetrics.inference_latency)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::LatencyMetrics* temp = inference_latency_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  inference_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ObjectDetectionMetrics::unsafe_arena_release_inference_latency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ObjectDetectionMetrics.inference_latency)
  _has_bits_[0] &= ~0x00000002u;
  ::tflite::evaluation::LatencyMetrics* temp = inference_latency_;
  inference_latency_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::LatencyMetrics* ObjectDetectionMetrics::mutable_inference_latency() {
  _has_bits_[0] |= 0x00000002u;
  if (inference_latency_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::LatencyMetrics>(GetArenaNoVirtual());
    inference_latency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionMetrics.inference_latency)
  return inference_latency_;
}
inline void ObjectDetectionMetrics::set_allocated_inference_latency(::tflite::evaluation::LatencyMetrics* inference_latency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete inference_latency_;
  }
  if (inference_latency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(inference_latency);
    if (message_arena != submessage_arena) {
      inference_latency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inference_latency, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  inference_latency_ = inference_latency;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ObjectDetectionMetrics.inference_latency)
}

// optional .tflite.evaluation.TfliteInferenceMetrics inference_metrics = 3;
inline bool ObjectDetectionMetrics::has_inference_metrics() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectDetectionMetrics::clear_inference_metrics() {
  if (inference_metrics_ != nullptr) inference_metrics_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::tflite::evaluation::TfliteInferenceMetrics& ObjectDetectionMetrics::inference_metrics() const {
  const ::tflite::evaluation::TfliteInferenceMetrics* p = inference_metrics_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionMetrics.inference_metrics)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::TfliteInferenceMetrics*>(
      &::tflite::evaluation::_TfliteInferenceMetrics_default_instance_);
}
inline ::tflite::evaluation::TfliteInferenceMetrics* ObjectDetectionMetrics::release_inference_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ObjectDetectionMetrics.inference_metrics)
  _has_bits_[0] &= ~0x00000004u;
  ::tflite::evaluation::TfliteInferenceMetrics* temp = inference_metrics_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  inference_metrics_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TfliteInferenceMetrics* ObjectDetectionMetrics::unsafe_arena_release_inference_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ObjectDetectionMetrics.inference_metrics)
  _has_bits_[0] &= ~0x00000004u;
  ::tflite::evaluation::TfliteInferenceMetrics* temp = inference_metrics_;
  inference_metrics_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::TfliteInferenceMetrics* ObjectDetectionMetrics::mutable_inference_metrics() {
  _has_bits_[0] |= 0x00000004u;
  if (inference_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::TfliteInferenceMetrics>(GetArenaNoVirtual());
    inference_metrics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionMetrics.inference_metrics)
  return inference_metrics_;
}
inline void ObjectDetectionMetrics::set_allocated_inference_metrics(::tflite::evaluation::TfliteInferenceMetrics* inference_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete inference_metrics_;
  }
  if (inference_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(inference_metrics);
    if (message_arena != submessage_arena) {
      inference_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inference_metrics, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  inference_metrics_ = inference_metrics;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ObjectDetectionMetrics.inference_metrics)
}

// optional .tflite.evaluation.ObjectDetectionAveragePrecisionMetrics average_precision_metrics = 4;
inline bool ObjectDetectionMetrics::has_average_precision_metrics() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectDetectionMetrics::clear_average_precision_metrics() {
  if (average_precision_metrics_ != nullptr) average_precision_metrics_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics& ObjectDetectionMetrics::average_precision_metrics() const {
  const ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* p = average_precision_metrics_;
  // @@protoc_insertion_point(field_get:tflite.evaluation.ObjectDetectionMetrics.average_precision_metrics)
  return p != nullptr ? *p : *reinterpret_cast<const ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics*>(
      &::tflite::evaluation::_ObjectDetectionAveragePrecisionMetrics_default_instance_);
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* ObjectDetectionMetrics::release_average_precision_metrics() {
  // @@protoc_insertion_point(field_release:tflite.evaluation.ObjectDetectionMetrics.average_precision_metrics)
  _has_bits_[0] &= ~0x00000008u;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* temp = average_precision_metrics_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  average_precision_metrics_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* ObjectDetectionMetrics::unsafe_arena_release_average_precision_metrics() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tflite.evaluation.ObjectDetectionMetrics.average_precision_metrics)
  _has_bits_[0] &= ~0x00000008u;
  ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* temp = average_precision_metrics_;
  average_precision_metrics_ = nullptr;
  return temp;
}
inline ::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* ObjectDetectionMetrics::mutable_average_precision_metrics() {
  _has_bits_[0] |= 0x00000008u;
  if (average_precision_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics>(GetArenaNoVirtual());
    average_precision_metrics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tflite.evaluation.ObjectDetectionMetrics.average_precision_metrics)
  return average_precision_metrics_;
}
inline void ObjectDetectionMetrics::set_allocated_average_precision_metrics(::tflite::evaluation::ObjectDetectionAveragePrecisionMetrics* average_precision_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete average_precision_metrics_;
  }
  if (average_precision_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(average_precision_metrics);
    if (message_arena != submessage_arena) {
      average_precision_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, average_precision_metrics, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  average_precision_metrics_ = average_precision_metrics;
  // @@protoc_insertion_point(field_set_allocated:tflite.evaluation.ObjectDetectionMetrics.average_precision_metrics)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace evaluation
}  // namespace tflite

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::tflite::evaluation::TfliteInferenceParams_Delegate> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tflite::evaluation::TfliteInferenceParams_Delegate>() {
  return ::tflite::evaluation::TfliteInferenceParams_Delegate_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tensorflow_2flite_2ftools_2fevaluation_2fproto_2fevaluation_5fstages_2eproto
